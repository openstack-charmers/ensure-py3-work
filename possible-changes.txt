('\\#\\!/usr/bin/python', 'open\\(.*\\)', 'sorted\\(.*cmp\\=.*\\)', '\\.sort\\(.*cmp\\=.*\\)', '\\.sort\\(\\)', 'UserDict', 'print\\ ', '"\\ \\%\\ .*', 'set\\(\\[', '.*\\ /(?:\\ .*|$)', '\\ range\\(.+\\)', '\\.next\\(\\)', 'class\\ .*\\(\\)', '\\.iter(?:keys|items|values)\\(\\)', '\\.(?:keys|items|values)\\(\\)', 'json\\.loads\\(', 'check_output\\(')
Checking ...
Total packages needing changes: 75
Total lines to change: 4774

Report on lines to change and the match:

Package/directory: charm-6wind-virtual-accelerator

Package/directory: charm-aodh
    File: ./charms/charm-aodh/src/tests/basic_deployment.py
          130: print("Running command: %s\n" % " ".join(command))
          131: output = subprocess.check_output(command)
          133: data = json.loads(output_json)
          141: output = subprocess.check_output(command)
          146: data = json.loads(output_json)
          229: aodh_endpoint = "http://%s:8042" % (aodh_ip)
          365: for s, conf_file in services.iteritems():
    File: ./charms/charm-aodh/unit_tests/test_aodh_handlers.py
           85: for k, v in self._patches.items():
          129: for f, args in t.items():
          131: self.assertTrue(f in p.keys(),

Package/directory: charm-barbican
    File: ./charms/charm-barbican/src/tests/basic_deployment.py
          229: barbican_admin_endpoint = "http://%s:9312" % (barbican_ip)
          230: barbican_endpoint = "http://%s:9311" % (barbican_ip)
          471: for s, conf_file in services.iteritems():
    File: ./charms/charm-barbican/src/actions/actions.py
           76: return "Action %s undefined" % action_name
    File: ./charms/charm-barbican/src/actions/generate-mkek
           76: return "Action %s undefined" % action_name
    File: ./charms/charm-barbican/src/actions/generate-hmac
           76: return "Action %s undefined" % action_name

Package/directory: charm-barbican-softhsm
    File: ./charms/charm-barbican-softhsm/src/tests/basic_deployment.py
          158: print("Running command: %s\n" % " ".join(command))
          159: output = subprocess.check_output(command)
          161: data = json.loads(output_json)
          169: output = subprocess.check_output(command)
          174: data = json.loads(output_json)
    File: ./charms/charm-barbican-softhsm/src/lib/charm/openstack/softhsm.py
          186: with open(STORED_PINS_FILE, 'r') as f:
          251: results = subprocess.check_output(cmd)
    File: ./charms/charm-barbican-softhsm/unit_tests/test_lib_barbican_softhsm.py
           59: mock.mock_open(read_data=d),

Package/directory: charm-ceilometer
    File: ./charms/charm-ceilometer/tests/basic_deployment.py
          250: ceil_endpoint = "http://%s:8777" % (ceil_ip)
          312: for key in relation_data.keys():
          506: for section, pairs in expected.iteritems():
          577: for s, conf_file in services.iteritems():
    File: ./charms/charm-ceilometer/actions/ceilometer_utils.py
           56: CEILOMETER_CONF = "%s/ceilometer.conf" % CEILOMETER_CONF_DIR
          210: for f, ctxt in CONFIG_FILES.iteritems():
          238: for v in restart_map().values():
          340: with open(SHARED_SECRET, 'r') as secret_file:
          351: with open(SHARED_SECRET, 'w') as secret_file:
    File: ./charms/charm-ceilometer/actions/resume
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-ceilometer/actions/ceilometer_hooks.py
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer/actions/actions.py
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-ceilometer/actions/pause
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-ceilometer/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer/lib/ceilometer_utils.py
           56: CEILOMETER_CONF = "%s/ceilometer.conf" % CEILOMETER_CONF_DIR
          210: for f, ctxt in CONFIG_FILES.iteritems():
          238: for v in restart_map().values():
          340: with open(SHARED_SECRET, 'r') as secret_file:
          351: with open(SHARED_SECRET, 'w') as secret_file:
    File: ./charms/charm-ceilometer/hooks/start
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/ceilometer_utils.py
           56: CEILOMETER_CONF = "%s/ceilometer.conf" % CEILOMETER_CONF_DIR
          210: for f, ctxt in CONFIG_FILES.iteritems():
          238: for v in restart_map().values():
          340: with open(SHARED_SECRET, 'r') as secret_file:
          351: with open(SHARED_SECRET, 'w') as secret_file:
    File: ./charms/charm-ceilometer/hooks/ha-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/update-status
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/ceilometer-service-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/shared-db-relation-departed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/metric-service-relation-departed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/identity-notifications-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/metric-service-relation-broken
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/metric-service-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/ceilometer_hooks.py
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/ha-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/amqp-relation-departed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/metric-service-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/install.real
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/config-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/upgrade-charm
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/hooks/stop
            1: #!/usr/bin/python
          306: "vip group - skipping" % (vip_key, vip), WARNING)
          404: with open(context['rabbit_ssl_ca']) as fh:
    File: ./charms/charm-ceilometer/unit_tests/test_ceilometer_utils.py
          154: class TestContext():
    File: ./charms/charm-ceilometer/unit_tests/test_ceilometer_contexts.py
          111: self.related_units.return_value = [k for k in related_units.keys()]
          170: with mock_open(utils.SHARED_SECRET, u'mysecret'):
    File: ./charms/charm-ceilometer/unit_tests/test_utils.py
           26: def mock_open(filename, contents=None):
           32: return open(*args)
           56: return yaml.safe_load(open(config).read())['options']
           66: for k, v in config.iteritems():

Package/directory: charm-ceilometer-agent
    File: ./charms/charm-ceilometer-agent/tests/basic_deployment.py
          248: ceil_endpoint = "http://%s:8777" % (ceil_ip)
          310: for key in relation_data.keys():
          537: for section, pairs in expected.iteritems():
          559: for section, pairs in expected.iteritems():
          579: for section, pairs in expected.iteritems():
          615: for section, pairs in expected_default.iteritems():
          633: for section, pairs in expected_alternate.iteritems():
          650: for section, pairs in expected_default.iteritems():
          721: for s, conf_file in services.iteritems():
    File: ./charms/charm-ceilometer-agent/actions/resume
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-ceilometer-agent/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/actions/actions.py
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-ceilometer-agent/actions/pause
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-ceilometer-agent/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/ceilometer_utils.py
           42: CEILOMETER_CONF = "%s/ceilometer.conf" % CEILOMETER_CONF_DIR
          128: for f, ctxt in CONFIG_FILES.iteritems():
          142: for v in restart_map().values():
    File: ./charms/charm-ceilometer-agent/hooks/install
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/ceilometer-service-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/nova-ceilometer-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/ceilometer_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-ceilometer-agent/hooks/ceilometer_contexts.py
           80: with open(ca_path, 'w') as fh:
    File: ./charms/charm-ceilometer-agent/unit_tests/test_ceilometer_utils.py
           57: for config in utils.CONFIG_FILES.keys():
    File: ./charms/charm-ceilometer-agent/unit_tests/test_utils.py
           26: def mock_open(filename, contents=None):
           32: return open(*args)
           56: return yaml.safe_load(open(config).read())['options']
           66: for k, v in config.iteritems():

Package/directory: charm-ceph
    File: ./charms/charm-ceph/tests/basic_deployment.py
          376: for section, pairs in expected.iteritems():
          394: for section, pairs in expected.iteritems():
          424: for section, pairs in expected.iteritems():
          441: for section, pairs in expected.iteritems():
    File: ./charms/charm-ceph/actions/list_disks.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/delete-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/list-pools
            1: #!/usr/bin/python
           12: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph/actions/pool-get
            1: #!/usr/bin/python
           14: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph/actions/add_disk.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/snapshot-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/delete-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/get-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/create-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/create-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/remove-pool-snapshot
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/list-erasure-profiles
            1: #!/usr/bin/python
           13: out = check_output(['ceph',
    File: ./charms/charm-ceph/actions/resume
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/rename-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/pool-set
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/list-disks
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/ceph_ops.py
           63: value = check_output(['ceph', 'osd', 'pool', 'get', pool_name, key])
    File: ./charms/charm-ceph/actions/pause_resume.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/pause
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/pool-statistics
            1: #!/usr/bin/python
           10: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph/actions/add-disk
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/actions/set-pool-max-bytes
            1: #!/usr/bin/python
    File: ./charms/charm-ceph/lib/ceph/crush_utils.py
           63: ids.sort()
           76: crush = check_output(['ceph', 'osd', 'getcrushmap'])
           77: return check_output(['crushtool', '-d', '-'], stdin=crush.stdout)
          102: compiled = check_output(['crushtool', '-c', '/dev/stdin', '-o',
          104: ceph_output = check_output(['ceph', 'osd', 'setcrushmap', '-i',
    File: ./charms/charm-ceph/lib/ceph/utils.py
          192: with open(save_location, "w") as fd:
          193: for key, value in sysctl_dict.items():
          230: subprocess.check_output(["sysctl", "-p", sysctl_file])
          253: with open(speed_path, 'r') as sysfs:
          261: for name, speed in LinkSpeed.items():
          307: with open(max_sectors_kb_path, 'w') as f:
          326: with open(max_sectors_kb_path, 'r') as f:
          348: with open(max_hw_sectors_kb_path, 'r') as f:
          369: subprocess.check_output(['hdparm',
          384: block_info = subprocess.check_output(
          536: tree = subprocess.check_output(
          539: json_tree = json.loads(tree)
          564: tree = subprocess.check_output(
          568: json_tree = json.loads(tree)
          631: raise ValueError("dirname not in correct format: %s" % dirname)
          721: log("FATAL ERROR: %s" % msg,
          739: result = json.loads(subprocess.check_output(cmd))
          766: result = json.loads(subprocess.check_output(cmd))
          877: subprocess.check_output([
          888: subprocess.check_output(['stop', 'ceph-osd', 'id={}'.format(
          897: subprocess.check_output([
          904: subprocess.check_output([
          910: subprocess.check_output([
          958: info = subprocess.check_output(['sgdisk', '-i', partition.number,
         1042: res = subprocess.check_output(cmd)
         1188: for subsystem, subcaps in caps.items():
         1191: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1208: output = subprocess.check_output(
         1240: for subsystem, subcaps in caps.items():
         1250: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1261: for subsystem, subcaps in caps.items():
         1314: with open(done, 'w'):
         1316: with open(init_marker, 'w'):
         1348: with open(init_marker, 'w'):
         1364: out = subprocess.check_output(cmd).splitlines()
         1532: result = subprocess.check_output(cmd)
         1548: output = subprocess.check_output(["ceph", '--id', service, "fs", "ls"])
         2031: with open(ready_file, 'w') as f:
         2082: pools = subprocess.check_output(['rados', '--id', service, 'lspools'])
         2142: """Pretty print supported upgrade paths for ceph"""
         2144: for key, value in UPGRADE_PATHS.iteritems():
         2166: tree = subprocess.check_output(['ceph', 'pg', 'stat', '--format=json'])
         2168: json_tree = json.loads(tree)
         2190: tree = subprocess.check_output(
         2193: json_tree = json.loads(tree)
         2218: cmd_result = subprocess.check_output(
    File: ./charms/charm-ceph/lib/ceph/broker.py
          104: return json.dumps(f(json.loads(req)))
          137: msg = ("Missing or invalid api version (%s)" % version)
          235: for permission, group in service["group_names"].items():
          240: for permission, groups in permission_types.items():
          269: service = json.loads(service_json)
          299: for _, groups in service['group_names'].items():
          318: group = json.loads(group_json)
          394: log("Creating pool '%s' (erasure_profile=%s)" % (pool.name,
          449: log("Creating pool '%s' (replicas=%s)" % (pool.name, replicas),
          453: log("Pool '%s' already exists - skipping create" % pool.name,
          522: msg = "Invalid key '%s'" % params['key']
          553: check_output(['radosgw-admin',
          575: check_output(
          604: with open(infile.name, 'w') as infile_handle:
          607: check_output(
          640: check_output(
          675: create_output = check_output(
          688: user_json = json.loads(create_output)
          732: check_output(["ceph",
          763: with open(infile.name, 'w') as infile_handle:
          766: check_output(
          793: log("Processing %s ceph broker requests" % (len(reqs)), level=INFO)
          796: log("Processing op='%s'" % op, level=DEBUG)
          851: msg = "Unknown operation '%s'" % op
    File: ./charms/charm-ceph/files/nagios/check_ceph_status.py
           16: with open(args.status_file, "r") as f:
           20: lines = subprocess.check_output(["ceph", "status"]).split('\n')
           36: print "All OK"
    File: ./charms/charm-ceph/hooks/start
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/mon-relation-changed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/radosgw-relation-joined
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/bootstrap-source-relation-departed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/update-status
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/radosgw-relation-changed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/mon-relation-joined
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/osd-devices-storage-attached
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/bootstrap-source-relation-broken
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/bootstrap-source-relation-joined
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/bootstrap-source-relation-changed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/ceph_hooks.py
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/upgrade-charm.real
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/utils.py
           51: with open(apt_sources, "r") as sources:
           53: with open(apt_sources, "w") as sources:
          140: "error to retry" % (networks))
    File: ./charms/charm-ceph/hooks/client-relation-changed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/install.real
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/config-changed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/osd-relation-joined
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/osd-devices-storage-detaching
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/stop
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/client-relation-joined
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/mon-relation-departed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/hooks/osd-relation-changed
            1: #!/usr/bin/python
          283: with open(JOURNAL_ZAPPED, 'w') as zapped:
          339: hosts.sort()
          635: if len(units.keys()) < moncount:
          641: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph/unit_tests/test_utils.py
           43: return yaml.safe_load(open(config).read())['options']
           53: for k, v in config.iteritems():
          121: def patch_open():
          122: '''Patch open() to allow mocking both open() itself and the file that is
          130: def stub_open(*args, **kwargs):
          131: mock_open(*args, **kwargs)
    File: ./charms/charm-ceph/unit_tests/test_ceph_ops.py
           48: self.assertEqual(json.loads(rc), {'exit-code': 0})
           68: self.assertEqual(json.loads(rc), {'exit-code': 0})
           90: self.assertEqual(json.loads(rc), {'exit-code': 0})
          104: self.assertEqual(json.loads(rc), {'exit-code': 0})
          125: self.assertEqual(json.loads(rc), {'exit-code': 0})
          146: self.assertEqual(json.loads(rc), {'exit-code': 0})
          163: self.assertEqual(json.loads(rc), {'exit-code': 0})
          179: self.assertEqual(json.loads(rc), {'exit-code': 0})
          195: self.assertEqual(json.loads(rc), {'exit-code': 0})
          211: self.assertEqual(json.loads(rc), {'exit-code': 0})
          229: self.assertEqual(json.loads(rc), {'exit-code': 0})
          241: self.assertEqual(json.loads(rc)['exit-code'], 1)

Package/directory: charm-ceph-fs
    File: ./charms/charm-ceph-fs/src/tests/basic_deployment.py
          203: for section, pairs in expected.iteritems():
    File: ./charms/charm-ceph-fs/src/actions/set_quota.py
            1: #!/usr/bin/python3
    File: ./charms/charm-ceph-fs/src/actions/remove_quota.py
            1: #!/usr/bin/python3
    File: ./charms/charm-ceph-fs/src/actions/set-quota
            1: #!/usr/bin/python3
    File: ./charms/charm-ceph-fs/src/actions/remove-quota
            1: #!/usr/bin/python3
    File: ./charms/charm-ceph-fs/src/actions/get-quota
            1: #!/usr/bin/python3
    File: ./charms/charm-ceph-fs/src/actions/get_quota.py
            1: #!/usr/bin/python3
    File: ./charms/charm-ceph-fs/src/reactive/ceph_fs.py
          118: with open(charm_ceph_conf, 'w') as ceph_conf:
          124: with open(cephx_key, 'w') as key_file:
          195: "error to retry" % networks)
          206: statuses = set([])
          207: messages = set([])
          226: result = subprocess.check_output(cmd).decode('utf-8')
    File: ./charms/charm-ceph-fs/unit_tests/test_utils.py
           42: return yaml.safe_load(open(config).read())['options']
           52: for k, v in config.iteritems():

Package/directory: charm-ceph-mon
    File: ./charms/charm-ceph-mon/tests/basic_deployment.py
          372: for section, pairs in expected.iteritems():
          389: for section, pairs in expected.iteritems():
          419: for section, pairs in expected.iteritems():
          436: for section, pairs in expected.iteritems():
    File: ./charms/charm-ceph-mon/actions/list-pools.py
            1: #!/usr/bin/python
           26: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/crushmap-update.py
            1: #!/usr/bin/python
           35: check_output(
    File: ./charms/charm-ceph-mon/actions/remove-cache-tier
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/remove-pool-snapshot.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/delete-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/list-pools
            1: #!/usr/bin/python
           26: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/pool-get
            1: #!/usr/bin/python
           28: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/snapshot-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/delete-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/get-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/show-disk-free
            1: #!/usr/bin/python
           25: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/delete-pool.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/create-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/rename-pool.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/create-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/remove-pool-snapshot
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/list-erasure-profiles
            1: #!/usr/bin/python
           27: out = check_output(['ceph',
    File: ./charms/charm-ceph-mon/actions/crushmap-update
            1: #!/usr/bin/python
           35: check_output(
    File: ./charms/charm-ceph-mon/actions/rename-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/pool-get.py
            1: #!/usr/bin/python
           28: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/show-disk-free.py
            1: #!/usr/bin/python
           25: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/pool-set
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/pool-statistics.py
            1: #!/usr/bin/python
           25: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/create-cache-tier.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/create-pool.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/remove-cache-tier.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/ceph_ops.py
           63: value = check_output(['ceph', 'osd', 'pool', 'get', pool_name, key])
    File: ./charms/charm-ceph-mon/actions/get-erasure-profile.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/set-pool-max-bytes.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/pool-statistics
            1: #!/usr/bin/python
           25: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-mon/actions/snapshot-pool.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/pool-set.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/set-pool-max-bytes
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/create-erasure-profile.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/delete-erasure-profile.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/actions/list-erasure-profiles.py
            1: #!/usr/bin/python
           27: out = check_output(['ceph',
    File: ./charms/charm-ceph-mon/actions/create-cache-tier
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-mon/lib/ceph/crush_utils.py
           63: ids.sort()
           76: crush = check_output(['ceph', 'osd', 'getcrushmap'])
           77: return check_output(['crushtool', '-d', '-'], stdin=crush.stdout)
          102: compiled = check_output(['crushtool', '-c', '/dev/stdin', '-o',
          104: ceph_output = check_output(['ceph', 'osd', 'setcrushmap', '-i',
    File: ./charms/charm-ceph-mon/lib/ceph/utils.py
          192: with open(save_location, "w") as fd:
          193: for key, value in sysctl_dict.items():
          230: subprocess.check_output(["sysctl", "-p", sysctl_file])
          253: with open(speed_path, 'r') as sysfs:
          261: for name, speed in LinkSpeed.items():
          307: with open(max_sectors_kb_path, 'w') as f:
          326: with open(max_sectors_kb_path, 'r') as f:
          348: with open(max_hw_sectors_kb_path, 'r') as f:
          369: subprocess.check_output(['hdparm',
          384: block_info = subprocess.check_output(
          536: tree = subprocess.check_output(
          539: json_tree = json.loads(tree)
          564: tree = subprocess.check_output(
          568: json_tree = json.loads(tree)
          631: raise ValueError("dirname not in correct format: %s" % dirname)
          721: log("FATAL ERROR: %s" % msg,
          739: result = json.loads(subprocess.check_output(cmd))
          766: result = json.loads(subprocess.check_output(cmd))
          877: subprocess.check_output([
          888: subprocess.check_output(['stop', 'ceph-osd', 'id={}'.format(
          897: subprocess.check_output([
          904: subprocess.check_output([
          910: subprocess.check_output([
          958: info = subprocess.check_output(['sgdisk', '-i', partition.number,
         1042: res = subprocess.check_output(cmd)
         1188: for subsystem, subcaps in caps.items():
         1191: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1208: output = subprocess.check_output(
         1240: for subsystem, subcaps in caps.items():
         1250: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1261: for subsystem, subcaps in caps.items():
         1314: with open(done, 'w'):
         1316: with open(init_marker, 'w'):
         1348: with open(init_marker, 'w'):
         1364: out = subprocess.check_output(cmd).splitlines()
         1532: result = subprocess.check_output(cmd)
         1548: output = subprocess.check_output(["ceph", '--id', service, "fs", "ls"])
         2031: with open(ready_file, 'w') as f:
         2082: pools = subprocess.check_output(['rados', '--id', service, 'lspools'])
         2142: """Pretty print supported upgrade paths for ceph"""
         2144: for key, value in UPGRADE_PATHS.iteritems():
         2166: tree = subprocess.check_output(['ceph', 'pg', 'stat', '--format=json'])
         2168: json_tree = json.loads(tree)
         2190: tree = subprocess.check_output(
         2193: json_tree = json.loads(tree)
         2218: cmd_result = subprocess.check_output(
    File: ./charms/charm-ceph-mon/lib/ceph/broker.py
          104: return json.dumps(f(json.loads(req)))
          137: msg = ("Missing or invalid api version (%s)" % version)
          235: for permission, group in service["group_names"].items():
          240: for permission, groups in permission_types.items():
          269: service = json.loads(service_json)
          299: for _, groups in service['group_names'].items():
          318: group = json.loads(group_json)
          394: log("Creating pool '%s' (erasure_profile=%s)" % (pool.name,
          449: log("Creating pool '%s' (replicas=%s)" % (pool.name, replicas),
          453: log("Pool '%s' already exists - skipping create" % pool.name,
          522: msg = "Invalid key '%s'" % params['key']
          553: check_output(['radosgw-admin',
          575: check_output(
          604: with open(infile.name, 'w') as infile_handle:
          607: check_output(
          640: check_output(
          675: create_output = check_output(
          688: user_json = json.loads(create_output)
          732: check_output(["ceph",
          763: with open(infile.name, 'w') as infile_handle:
          766: check_output(
          793: log("Processing %s ceph broker requests" % (len(reqs)), level=INFO)
          796: log("Processing op='%s'" % op, level=DEBUG)
          851: msg = "Unknown operation '%s'" % op
    File: ./charms/charm-ceph-mon/files/nagios/check_ceph_status.py
           16: with open(args.status_file, "r") as f:
           20: lines = subprocess.check_output(["ceph", "status"]).split('\n')
           36: print "All OK"
    File: ./charms/charm-ceph-mon/hooks/start
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/mon-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/radosgw-relation-joined
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/bootstrap-source-relation-departed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/update-status
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/radosgw-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/mon-relation-joined
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/admin-relation-joined
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/mds-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/admin-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/bootstrap-source-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/leader-settings-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/ceph_hooks.py
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/upgrade-charm.real
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/utils.py
           51: with open(apt_sources, "r") as sources:
           53: with open(apt_sources, "w") as sources:
          140: "error to retry" % (networks))
    File: ./charms/charm-ceph-mon/hooks/client-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/install.real
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/config-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/osd-relation-joined
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/stop
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/client-relation-joined
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/mon-relation-departed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/osd-relation-changed
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/hooks/mds-relation-joined
            1: #!/usr/bin/python
          257: hosts.sort()
          322: "bootstrap fsid '%s' != current fsid '%s'" % (
          325: "bootstrap secret '%s' != current secret '%s'" % (
          682: if len(units.keys()) < moncount:
          688: ready = sum(1 for unit_ready in units.itervalues() if unit_ready)
    File: ./charms/charm-ceph-mon/unit_tests/test_utils.py
           43: return yaml.safe_load(open(config).read())['options']
           53: for k, v in config.iteritems():
          151: def patch_open():
          152: '''Patch open() to allow mocking both open() itself and the file that is
          160: def stub_open(*args, **kwargs):
          161: mock_open(*args, **kwargs)
    File: ./charms/charm-ceph-mon/unit_tests/test_ceph_ops.py
           48: self.assertEqual(json.loads(rc), {'exit-code': 0})
           68: self.assertEqual(json.loads(rc), {'exit-code': 0})
           90: self.assertEqual(json.loads(rc), {'exit-code': 0})
          104: self.assertEqual(json.loads(rc), {'exit-code': 0})
          125: self.assertEqual(json.loads(rc), {'exit-code': 0})
          146: self.assertEqual(json.loads(rc), {'exit-code': 0})
          163: self.assertEqual(json.loads(rc), {'exit-code': 0})
          179: self.assertEqual(json.loads(rc), {'exit-code': 0})
          195: self.assertEqual(json.loads(rc), {'exit-code': 0})
          211: self.assertEqual(json.loads(rc), {'exit-code': 0})
          229: self.assertEqual(json.loads(rc), {'exit-code': 0})
          241: self.assertEqual(json.loads(rc)['exit-code'], 1)
    File: ./charms/charm-ceph-mon/unit_tests/test_ceph_hooks.py
          335: for key in unit_addrs.keys():
          345: return unit_addrs[relid].keys()

Package/directory: charm-ceph-osd
    File: ./charms/charm-ceph-osd/tests/basic_deployment.py
          350: for section, pairs in expected.iteritems():
          367: for section, pairs in expected.iteritems():
          397: for section, pairs in expected.iteritems():
          414: for section, pairs in expected.iteritems():
    File: ./charms/charm-ceph-osd/actions/list_disks.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-osd/actions/add_disk.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-osd/actions/replace_osd.py
            1: #!/usr/bin/python
           36: with open('/proc/diskstats', 'r') as diskstats:
    File: ./charms/charm-ceph-osd/actions/resume
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-osd/actions/list-disks
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-osd/actions/replace-osd
            1: #!/usr/bin/python
           36: with open('/proc/diskstats', 'r') as diskstats:
    File: ./charms/charm-ceph-osd/actions/pause_resume.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-osd/actions/pause
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-osd/actions/add-disk
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-osd/lib/ceph/crush_utils.py
           63: ids.sort()
           76: crush = check_output(['ceph', 'osd', 'getcrushmap'])
           77: return check_output(['crushtool', '-d', '-'], stdin=crush.stdout)
          102: compiled = check_output(['crushtool', '-c', '/dev/stdin', '-o',
          104: ceph_output = check_output(['ceph', 'osd', 'setcrushmap', '-i',
    File: ./charms/charm-ceph-osd/lib/ceph/utils.py
          191: with open(save_location, "w") as fd:
          192: for key, value in sysctl_dict.items():
          229: subprocess.check_output(["sysctl", "-p", sysctl_file])
          252: with open(speed_path, 'r') as sysfs:
          260: for name, speed in LinkSpeed.items():
          306: with open(max_sectors_kb_path, 'w') as f:
          325: with open(max_sectors_kb_path, 'r') as f:
          347: with open(max_hw_sectors_kb_path, 'r') as f:
          368: subprocess.check_output(['hdparm',
          383: block_info = subprocess.check_output(
          535: tree = subprocess.check_output(
          538: json_tree = json.loads(tree)
          563: tree = subprocess.check_output(
          567: json_tree = json.loads(tree)
          630: raise ValueError("dirname not in correct format: %s" % dirname)
          720: log("FATAL ERROR: %s" % msg,
          738: result = json.loads(subprocess.check_output(cmd))
          765: result = json.loads(subprocess.check_output(cmd))
          876: subprocess.check_output([
          887: subprocess.check_output(['stop', 'ceph-osd', 'id={}'.format(
          896: subprocess.check_output([
          903: subprocess.check_output([
          909: subprocess.check_output([
          957: info = subprocess.check_output(['sgdisk', '-i', partition.number,
         1041: res = subprocess.check_output(cmd)
         1187: for subsystem, subcaps in caps.items():
         1190: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1207: output = subprocess.check_output(
         1239: for subsystem, subcaps in caps.items():
         1249: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1260: for subsystem, subcaps in caps.items():
         1299: with open(done, 'w'):
         1301: with open(init_marker, 'w'):
         1334: with open(init_marker, 'w'):
         1350: out = subprocess.check_output(cmd).splitlines()
         1518: result = subprocess.check_output(cmd)
         1534: output = subprocess.check_output(["ceph", '--id', service, "fs", "ls"])
         2017: with open(ready_file, 'w') as f:
         2068: pools = subprocess.check_output(['rados', '--id', service, 'lspools'])
         2128: """Pretty print supported upgrade paths for ceph"""
         2130: for key, value in UPGRADE_PATHS.iteritems():
         2152: tree = subprocess.check_output(['ceph', 'pg', 'stat', '--format=json'])
         2154: json_tree = json.loads(tree)
         2176: tree = subprocess.check_output(
         2179: json_tree = json.loads(tree)
         2204: cmd_result = subprocess.check_output(
    File: ./charms/charm-ceph-osd/lib/ceph/broker.py
          104: return json.dumps(f(json.loads(req)))
          137: msg = ("Missing or invalid api version (%s)" % version)
          235: for permission, group in service["group_names"].items():
          240: for permission, groups in permission_types.items():
          269: service = json.loads(service_json)
          299: for _, groups in service['group_names'].items():
          318: group = json.loads(group_json)
          394: log("Creating pool '%s' (erasure_profile=%s)" % (pool.name,
          449: log("Creating pool '%s' (replicas=%s)" % (pool.name, replicas),
          453: log("Pool '%s' already exists - skipping create" % pool.name,
          522: msg = "Invalid key '%s'" % params['key']
          553: check_output(['radosgw-admin',
          575: check_output(
          604: with open(infile.name, 'w') as infile_handle:
          607: check_output(
          640: check_output(
          675: create_output = check_output(
          688: user_json = json.loads(create_output)
          732: check_output(["ceph",
          763: with open(infile.name, 'w') as infile_handle:
          766: check_output(
          793: log("Processing %s ceph broker requests" % (len(reqs)), level=INFO)
          796: log("Processing op='%s'" % op, level=DEBUG)
          851: msg = "Unknown operation '%s'" % op
    File: ./charms/charm-ceph-osd/files/nagios/check_ceph_status.py
           16: with open(args.status_file, "r") as f:
           20: lines = subprocess.check_output(["ceph", "status"]).split('\n')
           36: print "All OK"
    File: ./charms/charm-ceph-osd/hooks/start
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/mon-relation-changed
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/update-status
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/storage.real
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/ceph_hooks.py
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/upgrade-charm.real
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/utils.py
           68: with open(apt_sources, "r") as sources:
           70: with open(apt_sources, "w") as sources:
          157: "error to retry" % (networks))
    File: ./charms/charm-ceph-osd/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/install.real
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/config-changed
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/stop
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/hooks/mon-relation-departed
            1: #!/usr/bin/python
          292: with open(charm_ceph_conf, 'w') as cephconf:
          304: with open(JOURNAL_ZAPPED) as zapfile:
          315: with os.fdopen(tmpfh, 'wb') as zapfile:
          399: hosts.sort()
    File: ./charms/charm-ceph-osd/unit_tests/test_utils.py
           50: return yaml.safe_load(open(config).read())['options']
           60: for k, v in config.iteritems():
          128: def patch_open():
          129: '''Patch open() to allow mocking both open() itself and the file that is
          137: def stub_open(*args, **kwargs):
          138: mock_open(*args, **kwargs)

Package/directory: charm-ceph-proxy
    File: ./charms/charm-ceph-proxy/actions/remove-cache-tier
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/delete-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/list-pools
            1: #!/usr/bin/python
           12: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-proxy/actions/pool-get
            1: #!/usr/bin/python
           14: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-proxy/actions/snapshot-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/delete-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/get-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/create-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/create-erasure-profile
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/remove-pool-snapshot
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/list-erasure-profiles
            1: #!/usr/bin/python
           13: out = check_output(['ceph',
    File: ./charms/charm-ceph-proxy/actions/rename-pool
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/pool-set
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/create-cache-tier.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/remove-cache-tier.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/ceph_ops.py
           50: value = check_output(['ceph', 'osd', 'pool', 'get', pool_name, key])
    File: ./charms/charm-ceph-proxy/actions/pool-statistics
            1: #!/usr/bin/python
           10: out = check_output(['ceph', '--id', 'admin',
    File: ./charms/charm-ceph-proxy/actions/set-pool-max-bytes
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/actions/create-cache-tier
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/files/nagios/check_ceph_status.py
           16: with open(args.status_file, "r") as f:
           20: lines = subprocess.check_output(["ceph", "status"]).split('\n')
           36: print "All OK"
    File: ./charms/charm-ceph-proxy/hooks/radosgw-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/hooks/radosgw-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/hooks/ceph.py
          111: log("FATAL ERROR: %s" % msg,
          129: result = json.loads(subprocess.check_output(cmd))
          156: result = json.loads(subprocess.check_output(cmd))
          202: info = subprocess.check_output(['sgdisk', '-i', '1', dev])
          267: res = subprocess.check_output(cmd)
          387: for subsystem, subcaps in caps.iteritems():
          392: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
          403: for subsystem, subcaps in caps.iteritems():
          442: with open(done, 'w'):
          444: with open(init_marker, 'w'):
          468: with open(init_marker, 'w'):
    File: ./charms/charm-ceph-proxy/hooks/ceph_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/hooks/utils.py
           46: with open(apt_sources, "r") as sources:
           48: with open(apt_sources, "w") as sources:
          135: "error to retry" % (networks))
    File: ./charms/charm-ceph-proxy/hooks/client-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/hooks/ceph_broker.py
            1: #!/usr/bin/python
           81: return json.dumps(f(json.loads(req)))
          111: msg = ("Missing or invalid api version (%s)" % version)
          165: log("Creating pool '%s' (erasure_profile=%s)" % (pool.name,
          199: log("Creating pool '%s' (replicas=%s)" % (pool.name, replicas),
          203: log("Pool '%s' already exists - skipping create" % pool.name,
          253: msg = "Invalid key '%s'" % params['key']
          281: log("Processing %s ceph broker requests" % (len(reqs)), level=INFO)
          284: log("Processing op='%s'" % op, level=DEBUG)
          324: msg = "Unknown operation '%s'" % op
    File: ./charms/charm-ceph-proxy/hooks/install.real
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/hooks/client-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-ceph-proxy/unit_tests/test_ceph_broker.py
           17: self.assertEqual(json.loads(rc), {'exit-code': 0})
           23: self.assertEqual(json.loads(rc), {
           31: print "Return: %s" % rc
           32: self.assertEqual(json.loads(rc),
           40: self.assertEqual(json.loads(rc),
           64: self.assertEqual(json.loads(rc), {'exit-code': 0})
           87: self.assertEqual(json.loads(rc), {'exit-code': 0})
           88: self.assertEqual(json.loads(rc), {'exit-code': 0})
          105: self.assertEqual(json.loads(rc), {'exit-code': 0})
          126: self.assertEqual(json.loads(rc)['exit-code'], 0)
          127: self.assertEqual(json.loads(rc)['request-id'], '1ef5aede')
          134: self.assertEqual(json.loads(rc)['exit-code'], 1)
          135: self.assertEqual(json.loads(rc)['stderr'],
          137: self.assertEqual(json.loads(rc)['request-id'], '1ef5aede')
    File: ./charms/charm-ceph-proxy/unit_tests/test_utils.py
           29: return yaml.safe_load(open(config).read())['options']
           39: for k, v in config.iteritems():
          107: def patch_open():
          108: '''Patch open() to allow mocking both open() itself and the file that is
          116: def stub_open(*args, **kwargs):
          117: mock_open(*args, **kwargs)
    File: ./charms/charm-ceph-proxy/unit_tests/test_ceph_hooks.py
           24: """ % CEPH_KEY
           42: print("juju-log %s: %s" % (level, message))

Package/directory: charm-ceph-radosgw
    File: ./charms/charm-ceph-radosgw/tests/basic_deployment.py
          456: for section, pairs in expected.iteritems():
          473: for section, pairs in expected.iteritems():
          503: for section, pairs in expected.iteritems():
          520: for section, pairs in expected.iteritems():
          581: assert('content-type' in headers.keys())
          624: # previous run of this function. If / when we support per
    File: ./charms/charm-ceph-radosgw/actions/resume
            1: #!/usr/bin/python
           52: return "Action %s undefined" % action_name
    File: ./charms/charm-ceph-radosgw/actions/actions.py
            1: #!/usr/bin/python
           52: return "Action %s undefined" % action_name
    File: ./charms/charm-ceph-radosgw/actions/pause
            1: #!/usr/bin/python
           52: return "Action %s undefined" % action_name
    File: ./charms/charm-ceph-radosgw/hooks/start
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/mon-relation-changed
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/gateway-relation-joined
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/ha-relation-joined
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/ceph_radosgw_context.py
          113: log("Host '%s' appears to be ipv6 resolvable" % (hostname),
          123: with open(tmp_hosts, 'a+') as fd:
          126: key = "^%s\s+" % (host_addr)
          130: fd.write("%s\t%s\n" % (host_addr, hostname))
          177: port = "[::]:%s" % (port)
          179: mon_hosts.sort()
    File: ./charms/charm-ceph-radosgw/hooks/update-status
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/ceph.py
           48: result = json.loads(subprocess.check_output(cmd))
           72: result = json.loads(subprocess.check_output(cmd))
          114: info = subprocess.check_output(['sgdisk', '-i', '1', dev])
          221: for subsystem, subcaps in caps.iteritems():
          226: output = subprocess.check_output(cmd).strip()  # IGNORE:E1103
    File: ./charms/charm-ceph-radosgw/hooks/ha-relation-changed
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/utils.py
          175: for cfg, rscs in CONFIGS.iteritems():
          183: for v in BASE_RESOURCE_MAP.values():
          193: with open(apt_sources, "r") as sources:
          195: with open(apt_sources, "w") as sources:
          425: with open(ca, 'w') as fd:
          428: out = subprocess.check_output(['openssl', 'x509', '-in', ca,
          456: with open(signing_cert_path, 'w') as fd:
          459: out = subprocess.check_output(['openssl', 'x509', '-in',
          517: if set(required).issubset(set(rdata.keys())):
          561: with open(APACHE_PORTS_FILE, 'w') as ports:
    File: ./charms/charm-ceph-radosgw/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/install.real
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/config-changed
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/upgrade-charm
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/hooks.py
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/stop
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/hooks/mon-relation-departed
            1: #!/usr/bin/python
          296: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-ceph-radosgw/unit_tests/test_ceph_radosgw_context.py
          214: expect['port'] = "[::]:%s" % (70)
          254: expect['port'] = "[::]:%s" % (70)
    File: ./charms/charm-ceph-radosgw/unit_tests/test_utils.py
           42: return yaml.safe_load(open(config).read())['options']
           52: for k, v in config.iteritems():
    File: ./charms/charm-ceph-radosgw/unit_tests/test_ceph_radosgw_utils.py
          185: m = mock_open()
          210: m = mock_open()

Package/directory: charm-cinder
    File: ./charms/charm-cinder/tests/basic_deployment.py
          258: cmd = 'sudo lvs | grep cinder-volumes | awk \'{ print $1 }\''
          602: for section, pairs in expected.iteritems():
          629: for section, pairs in expected.iteritems():
          758: for s, conf_file in services.iteritems():
    File: ./charms/charm-cinder/templates/liberty/cinder.conf
           60: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-cinder/templates/icehouse/cinder.conf
           63: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-cinder/templates/ocata/cinder.conf
           42: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-cinder/templates/mitaka/cinder.conf
           55: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-cinder/templates/kilo/cinder.conf
           60: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-cinder/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-cinder/actions/cinder_manage.py
           89: log("Removing service:%d, hostname:%s" % (service.id, service.host))
           97: action_fail("Cannot remove service: %s" % service.host)
    File: ./charms/charm-cinder/actions/resume
            1: #!/usr/bin/python
           60: return "Action %s undefined" % action_name
    File: ./charms/charm-cinder/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-cinder/actions/remove-services
            1: #!/usr/bin/python
           60: return "Action %s undefined" % action_name
    File: ./charms/charm-cinder/actions/rename-volume-host
            1: #!/usr/bin/python
           60: return "Action %s undefined" % action_name
    File: ./charms/charm-cinder/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-cinder/actions/actions.py
            1: #!/usr/bin/python
           60: return "Action %s undefined" % action_name
    File: ./charms/charm-cinder/actions/pause
            1: #!/usr/bin/python
           60: return "Action %s undefined" % action_name
    File: ./charms/charm-cinder/actions/volume-host-add-driver
            1: #!/usr/bin/python
           60: return "Action %s undefined" % action_name
    File: ./charms/charm-cinder/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-cinder/hooks/start
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/identity-service-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/ha-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/pgsql-db-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/pgsql-db-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/update-status
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/pgsql-db-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/ceph-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/ceph-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/cinder-volume-service
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/storage-backend-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/image-service-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/cinder_hooks.py
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/backup-backend-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/ceph-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/backup-backend-relation-departed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/backup-backend-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/cinder_contexts.py
          249: log("Installing crontab: %s" % self.DEFAULT_CRONTAB_PATH)
          250: with open(self.DEFAULT_CRONTAB_PATH, "w+") as crontab:
    File: ./charms/charm-cinder/hooks/cinder-volume-service-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/ha-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/cinder_utils.py
          284: for cfg, rscs in resource_map().iteritems():
          312: open(ceph_config_file(), 'w').close()
          324: for cfg in resource_map.keys():
          411: for cfg, v in resource_map().iteritems()
          418: for t in m.iteritems():
          427: for v in restart_map().values():
          493: pvscan_output = subprocess.check_output(['pvscan'])
          573: out = subprocess.check_output(['fdisk', '-l', block_device],
          721: id = "%s-%s" % (local_unit(), uuid.uuid4())
          728: env = open('/etc/environment', 'r').read()
          730: with open('/etc/environment', 'a') as out:
          732: with open('/etc/init/cinder-volume.override', 'w') as out:
    File: ./charms/charm-cinder/hooks/storage-backend-relation-departed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/storage-backend-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/storage-backend-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/amqp-relation-departed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/install.real
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/config-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/upgrade-charm
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/backup-backend-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/stop
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/amqp-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/shared-db-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/hooks/image-service-relation-broken
            1: #!/usr/bin/python
          527: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-cinder/unit_tests/test_cinder_utils.py
           95: Sector size (logical/physical): 512 bytes / 512 bytes
           96: I/O size (minimum/optimal): 512 bytes / 512 bytes
          211: for cfg in ex_map.keys():
          233: for cfg in ex_map.keys():
          282: cinder_utils.resource_map().keys())
          297: cinder_utils.resource_map().keys())
          321: cinder_utils.resource_map().keys())
          336: cinder_utils.resource_map().keys())
          686: args = {'cinder-db-initialised': "unit/0-%s" % uuid}
          727: env = open('/etc/environment', 'r').read()
          729: with open('/etc/environment', 'a') as out:
          731: with open('/etc/init/cinder-volume.override', 'w') as out:
         1000: self.juju_log.assert_called_with("pvscan: %s" % output)
    File: ./charms/charm-cinder/unit_tests/test_utils.py
           57: return yaml.safe_load(open(config).read())['options']
           66: for k, v in config.iteritems():
    File: ./charms/charm-cinder/unit_tests/test_cluster_hooks.py
           89: [side_effects.append('foo') for f in RESTART_MAP.keys()]
           91: [side_effects.append('bar') for f in RESTART_MAP.keys()]

Package/directory: charm-cinder-backup
    File: ./charms/charm-cinder-backup/tests/basic_deployment.py
          309: rel_data = json.loads(unit.relation(
          314: for index in range(0, len(rel_data['ops'])):
          326: broker_req = json.loads(client_unit.relation(
          347: broker_response = json.loads(relation_data[response_key])
          584: for section, pairs in expected.iteritems():
          611: for section, pairs in expected.iteritems():
          790: name = "restore_backup_%s" % (vol_backup.id)
    File: ./charms/charm-cinder-backup/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/cinder_backup_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/install
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/ceph-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/ceph-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/cinder_backup_utils.py
           79: open(ceph_config_file(), 'w').close()
          102: for f, ctxt in CONFIG_FILES.iteritems():
          114: env = open('/etc/environment', 'r').read()
          116: with open('/etc/environment', 'a') as out:
          118: with open('/etc/init/cinder-backup.override', 'w') as out:
    File: ./charms/charm-cinder-backup/hooks/backup-backend-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/ceph-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/backup-backend-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/backup-backend-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-backup/unit_tests/test_utils.py
           41: return yaml.safe_load(open(config).read())['options']
           50: for k, v in config.iteritems():

Package/directory: charm-cinder-ceph
    File: ./charms/charm-cinder-ceph/tests/basic_deployment.py
          315: rel_data = json.loads(unit.relation(
          320: for index in range(0, len(rel_data['ops'])):
          332: broker_req = json.loads(client_unit.relation(
          353: broker_response = json.loads(relation_data[response_key])
          594: for section, pairs in expected.iteritems():
          615: for section, pairs in expected.iteritems():
    File: ./charms/charm-cinder-ceph/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/install
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/ceph-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/ceph-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/ceph-access-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/storage-backend-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/cinder_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/ceph-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/leader-settings-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/cinder_utils.py
           85: open(ceph_config_file(), 'w').close()
          109: for f, ctxt in CONFIG_FILES.iteritems():
          121: env = open('/etc/environment', 'r').read()
          123: with open('/etc/environment', 'a') as out:
          125: with open('/etc/init/cinder-volume.override', 'w') as out:
    File: ./charms/charm-cinder-ceph/hooks/storage-backend-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/storage-backend-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/ceph-access-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-cinder-ceph/unit_tests/test_cinder_utils.py
           74: env = open('/etc/environment', 'r').read()
           76: with open('/etc/environment', 'a') as out:
           78: with open('/etc/init/cinder-volume.override', 'w') as out:
    File: ./charms/charm-cinder-ceph/unit_tests/test_utils.py
           42: return yaml.safe_load(open(config).read())['options']
           52: for k, v in config.iteritems():

Package/directory: charm-cloudkitty

Package/directory: charm-designate
    File: ./charms/charm-designate/src/tests/basic_deployment.py
          176: print("Running command: %s\n" % " ".join(command))
          177: output = subprocess.check_output(command)
          179: data = json.loads(output_json)
          187: output = subprocess.check_output(command)
          192: data = json.loads(output_json)
          265: designate_endpoint = "http://%s:9001" % (designate_ip)
          433: cmd_out = subprocess.check_output(lookup_cmd).rstrip('\r\n')
          489: for s, conf_file in services.iteritems():
    File: ./charms/charm-designate/src/lib/charm/openstack/designate.py
          383: output = subprocess.check_output(get_cmd)
    File: ./charms/charm-designate/src/reactive/designate_utils.py
            1: #!/usr/bin/python3
           39: with open("/root/novarc", "r") as ins:
          154: help='One of: {}'.format(', '.join(commands.keys())))
    File: ./charms/charm-designate/unit_tests/test_lib_charm_openstack_designate.py
           44: for k, v in self._patches.items():
    File: ./charms/charm-designate/unit_tests/test_designate_utils.py
           23: for k, v in self._patches.items():
           70: mock.mock_open(read_data=text_file_data),
           73: with open('filename', 'rU'):

Package/directory: charm-designate-bind
    File: ./charms/charm-designate-bind/src/tests/basic_deployment.py
          243: cmd_out = subprocess.check_output(lookup_cmd).rstrip('\r\n')
    File: ./charms/charm-designate-bind/src/lib/charm/openstack/designate_bind.py
          360: open(touch_file, 'w+').close()
          468: open(apparmor_file, 'w').close()
    File: ./charms/charm-designate-bind/unit_tests/test_lib_charm_openstack_designate_bind.py
           43: for k, v in self._patches.items():
    File: ./charms/charm-designate-bind/unit_tests/test_designate_bind_handlers.py
           86: for k, v in self._patches.items():
          145: for f, args in t.items():
          148: self.assertTrue(f in p.keys())

Package/directory: charm-glance
    File: ./charms/charm-glance/tests/basic_deployment.py
          513: for section, pairs in expected.iteritems():
          557: for section, pairs in expected.iteritems():
    File: ./charms/charm-glance/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-glance/actions/resume
            1: #!/usr/bin/python
           55: return "Action %s undefined" % action_name
    File: ./charms/charm-glance/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-glance/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-glance/actions/actions.py
            1: #!/usr/bin/python
           55: return "Action %s undefined" % action_name
    File: ./charms/charm-glance/actions/pause
            1: #!/usr/bin/python
           55: return "Action %s undefined" % action_name
    File: ./charms/charm-glance/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-glance/hooks/start
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/identity-service-relation-broken
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/ha-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/pgsql-db-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/object-store-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/cinder-volume-service-relation-broken
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/pgsql-db-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/update-status
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/pgsql-db-relation-broken
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/ceph-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/ceph-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/object-store-relation-broken
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/glance_utils.py
            1: #!/usr/bin/python
          139: GLANCE_REGISTRY_CONF = "%s/glance-registry.conf" % GLANCE_CONF_DIR
          140: GLANCE_API_CONF = "%s/glance-api.conf" % GLANCE_CONF_DIR
          253: open(ceph_config_file(), 'w').close()
          338: for f, ctxt in CONFIG_FILES.iteritems():
          353: return list(set(chain(*restart_map().values())))
    File: ./charms/charm-glance/hooks/image-service-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/ceph-relation-broken
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/cinder-volume-service-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/glance_relations.py
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/ha-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/glance_contexts.py
          113: for store_relation, store_type in store_mapping.iteritems():
    File: ./charms/charm-glance/hooks/storage-backend-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/storage-backend-relation-broken
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/object-store-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/install.real
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/config-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/upgrade-charm
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/stop
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/hooks/shared-db-relation-broken
            1: #!/usr/bin/python
          377: # Configure any object-store / swift relations now that we have an
    File: ./charms/charm-glance/unit_tests/test_utils.py
           46: return yaml.safe_load(open(config).read())['options']
           55: for k, v in config.iteritems():
          139: def patch_open():
          140: '''Patch open() to allow mocking both open() itself and the file that is
          148: def stub_open(*args, **kwargs):
          149: mock_open(*args, **kwargs)

Package/directory: charm-glusterfs
    File: ./charms/charm-glusterfs/src/actions/enable-bitrot-scan
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/set-bitrot-scan-frequency
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/pause-bitrot-scan
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/set-bitrot-throttle
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/delete-volume-quota
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/list-volume-quotas
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/rebalance-volume
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/resume-bitrot-scan
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/set-volume-options
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/create-volume-quota
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/actions/disable-bitrot-scan
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/src/lib/charm/gluster/metrics.py
           30: gb_used = used_space / 1024 / 1024 / 1024
    File: ./charms/charm-glusterfs/src/lib/charm/gluster/fstab.py
           79: with open(self.location, "r") as file:
          117: with open(self.location, "w") as f:
    File: ./charms/charm-glusterfs/src/lib/charm/gluster/volume.py
         1022: output = subprocess.check_output(cmd, stderr=subprocess.PIPE)
    File: ./charms/charm-glusterfs/src/lib/charm/gluster/samba.py
           59: with open(samba_path) as existing_config:
           89: with open(os.path.join(os.sep, 'etc', 'samba', 'smb.conf')) as samba_conf:
    File: ./charms/charm-glusterfs/src/lib/charm/gluster/block.py
          192: return AsyncInit(format_child=subprocess.Popen(arg_list),
          243: return AsyncInit(format_child=subprocess.Popen(arg_list),
          310: format_handle = subprocess.Popen(arg_list)
          317: # / The default blocksize for volumes is 8 Kbytes. Any
          318: # / power of 2 from 512 bytes to 128 Kbytes is valid.
          328: # / Enable compression on the volume. Default is False
          350: zpool_create = subprocess.Popen(arg_list)
          395: output = subprocess.check_output(cmd, stderr=subprocess.PIPE)
          575: f = open("/etc/rc.local", "r")
          584: f = open("/etc/rc.local", "w", encoding="utf-8")
          620: with open(crontab, 'r') as f:
          637: out = os.fdopen(fd, 'w')
    File: ./charms/charm-glusterfs/src/lib/charm/gluster/lib.py
           89: while all(len(_peers[i]['bricks']) > 0 for i in _peers.keys()):
           90: for k in _peers.keys():
          309: to_remove = list(new_peers.keys())[count:]
          335: to_remove = list(new_peers.keys())[count:]
          442: return subprocess.check_output(cmd, stderr=subprocess.PIPE).decode(
    File: ./charms/charm-glusterfs/src/reactive/upgrade.py
           54: with open("/var/lib/glusterd/glusterd.info", "r") as f:
           91: peer_list.sort()
          172: with open(upgrade_key, "r") as f:
          176: decoded = json.loads(s)
          200: with open(os.path.join(p, key), "w") as file:
    File: ./charms/charm-glusterfs/src/reactive/main.py
          579: probed_units = json.loads(p)
    File: ./charms/charm-glusterfs/src/reactive/actions.py
            1: #!/usr/bin/python3
          225: return "Action %s undefined" % action_name
    File: ./charms/charm-glusterfs/unit_tests/fstab
            3: # Use 'blkid' to print the universally unique identifier for a
            8: /dev/mapper/xubuntu--vg--ssd-root /               ext4    noatime,errors=remount-ro 0       1
    File: ./charms/charm-glusterfs/unit_tests/test_fstab.py
           69: with open('unit_tests/fstab', 'r') as f:
    File: ./charms/charm-glusterfs/unit_tests/test_lib.py
          141: for test, correct in self.tests.items():
    File: ./charms/charm-glusterfs/unit_tests/test_volume.py
           79: with open('unit_tests/quota_list.xml', 'r') as xml_output:

Package/directory: charm-gnocchi
    File: ./charms/charm-gnocchi/src/tests/basic_deployment.py
          159: output = subprocess.check_output(command)
          161: data = json.loads(output_json)
          169: output = subprocess.check_output(command)
          174: data = json.loads(output_json)
    File: ./charms/charm-gnocchi/src/templates/gnocchi-api.conf
           12: WSGIScriptAlias / /usr/share/gnocchi-common/app.wsgi
    File: ./charms/charm-gnocchi/src/templates/newton/gnocchi-api.conf
           12: WSGIScriptAlias / /usr/bin/gnocchi-api

Package/directory: charm-hacluster
    File: ./charms/charm-hacluster/tests/basic_deployment.py
           58: "skipping tests" % (env_var))
    File: ./charms/charm-hacluster/templates/corosync.conf
           72: {% for nodeid, ip in ha_nodes.iteritems() %}
    File: ./charms/charm-hacluster/actions/resume
            1: #!/usr/bin/python
           48: return "Action %s undefined" % action_name
    File: ./charms/charm-hacluster/actions/actions.py
            1: #!/usr/bin/python
           48: return "Action %s undefined" % action_name
    File: ./charms/charm-hacluster/actions/pause
            1: #!/usr/bin/python
           48: return "Action %s undefined" % action_name
    File: ./charms/charm-hacluster/files/nrpe/check_corosync_rings
           73: open( $fh, "$sudo $cfgtool |" )
    File: ./charms/charm-hacluster/files/nrpe/check_crm
          102: open( $fh, "$sudo $crm_mon |" )
          186: open( $fh, "$sudo $crm_configure_show|" )
    File: ./charms/charm-hacluster/hooks/start
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/ha-relation-joined
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/pcmk.py
           41: for i in range(retries):
           58: status = commands.getstatusoutput("crm resource status %s" % resource)[0]
           69: cmd = "crm -F node standby %s" % node
           78: cmd = "crm -F node online %s" % node
           92: (_, output) = commands.getstatusoutput("crm resource status %s" % opt_name)
           93: if output.startswith("resource %s is running" % opt_name):
          101: out = subprocess.check_output(cmd)
          182: output = subprocess.check_output(['crm', 'configure',
          187: output = subprocess.check_output(['crm', 'configure', 'show', 'xml'],
          191: output = subprocess.check_output(['crm', 'configure',
          204: subprocess.check_output(['crm', 'configure',
          213: ver = subprocess.check_output(['crm', '--version'],
    File: ./charms/charm-hacluster/hooks/hanode-relation-joined
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/ha-relation-changed
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/utils.py
            1: #!/usr/bin/python
          122: with open("/etc/init/{}.override".format(service), "w") as override:
          195: msg = "Invalid interface '%s'" % iface
          199: msg = "No valid network found for interface '%s'" % iface
          212: return [k for k in data.iterkeys()
          293: missing = [k for k, v in conf.iteritems() if v is None]
          389: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          402: for res in resources.itervalues():
          407: for k, v in res_p.itervalues():
          409: log("Excluding '%s' from address list" % v,
          425: log("Expected an ipv6 address but got %s" % (addr),
          455: hosts.sort()
          646: for restart in range(retries):
          759: out = subprocess.check_output(['crm', 'node', 'status', node_name])
          800: out = subprocess.check_output(['crm_mon', '-X'])
          906: for key, val in resources.iteritems():
          925: ps = subprocess.check_output(cmd)
    File: ./charms/charm-hacluster/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/install.real
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/hanode-relation-changed
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/config-changed
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/upgrade-charm
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/maas.py
           75: out = subprocess.check_output(cmd)
           81: return json.loads(out)
    File: ./charms/charm-hacluster/hooks/hooks.py
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/hooks/stop
            1: #!/usr/bin/python
          125: "types are: %s" % (transport, ', '.join(SUPPORTED_TRANSPORTS)))
          180: for ra in resources.values()]:
          181: for resource in resource_params.keys():
          185: log("Migrating MAAS DNS resource %s" % resource, INFO)
          258: for ra in resources.itervalues()]:
          261: for ra in resources.itervalues()]:
          265: for ra in resources.values()]:
          271: for resource in resource_params.keys():
          314: for res_name, res_type in resources.iteritems():
          344: for grp_name, grp_params in groups.iteritems():
          352: for ms_name, ms_params in ms.iteritems():
          359: for ord_name, ord_params in orders.iteritems():
          367: for col_name, col_params in colocations.iteritems():
          375: for cln_name, cln_params in clones.iteritems():
          383: for loc_name, loc_params in locations.iteritems():
          390: for res_name, res_type in resources.iteritems():
          397: if (res_name not in clones.values() and
          398: res_name not in groups.values() and
    File: ./charms/charm-hacluster/ocf/maas/maas_dns.py
            1: #!/usr/bin/python3
    File: ./charms/charm-hacluster/ocf/maas/maasclient/driver.py
           61: log.warning("Attr 'uuid' not found in %s" % obj)
    File: ./charms/charm-hacluster/unit_tests/test_utils.py
           44: return yaml.safe_load(open(config).read())['options']
           54: for k, v in config.iteritems():
          138: def patch_open():
          139: '''Patch open() to allow mocking both open() itself and the file that is
          147: def stub_open(*args, **kwargs):
          148: mock_open(*args, **kwargs)
    File: ./charms/charm-hacluster/unit_tests/test_hacluster_hooks.py
          103: for name, params in rel_get_data[key].items():
    File: ./charms/charm-hacluster/unit_tests/test_hacluster_utils.py
           28: with open(path, 'w') as f:
           76: with open(utils.COROSYNC_CONF) as fd:
          114: @mock.patch.object(utils, 'get_corosync_id', lambda u: "%s-cid" % (u))
          143: @mock.patch.object(utils, 'get_corosync_id', lambda u: "%s-cid" % (u))

Package/directory: charm-heat
    File: ./charms/charm-heat/tests/basic_deployment.py
          256: 'files': dict(list(t_files.items()) + list(env_files.items())),
          559: for section, pairs in expected.iteritems():
          631: output = json.loads(output)
          637: ks = keys.values()
          640: .format("{}={}".format(k, v) for k, v in keys.items()))
          690: for s, conf_file in services.iteritems():
    File: ./charms/charm-heat/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-heat/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-heat/hooks/start
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/identity-service-relation-broken
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/ha-relation-joined
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/update-status
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/leader-elected
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/ha-relation-changed
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/install.real
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/config-changed
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/upgrade-charm
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/heat_relations.py
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/heat_context.py
           98: external_ports = API_PORTS.values()
    File: ./charms/charm-heat/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/heat_utils.py
          221: for f, ctxt in CONFIG_FILES.iteritems():
          233: for v in restart_map().values():
    File: ./charms/charm-heat/hooks/stop
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/amqp-relation-broken
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/hooks/shared-db-relation-broken
            1: #!/usr/bin/python
          126: for port in API_PORTS.values():
          165: with open(encryption_path, 'r') as f:
          382: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-heat/unit_tests/test_heat_relations.py
          145: with patch_open() as (mock_open, mock_file):
    File: ./charms/charm-heat/unit_tests/test_utils.py
           43: return yaml.safe_load(open(config).read())['options']
           52: for k, v in config.iteritems():
          120: def patch_open():
          121: '''Patch open().
          122: To allow mocking both open() itself and the file that is yielded.
          130: def stub_open(*args, **kwargs):
          131: mock_open(*args, **kwargs)

Package/directory: charm-interface-barbican-hsm
    File: ./charms/charm-interface-barbican-hsm/requires.py
           76: return json.loads(data)["data"]

Package/directory: charm-interface-bind-rndc
    File: ./charms/charm-interface-bind-rndc/requires.py
            1: #!/usr/bin/python
           55: if self.rndc_info and all(self.rndc_info.values()):
           70: if all(data.values()):
    File: ./charms/charm-interface-bind-rndc/provides.py
            1: #!/usr/bin/python
           35: hookenv.log('States: {}'.format(get_states().keys()))

Package/directory: charm-interface-ceph-client
    File: ./charms/charm-interface-ceph-client/requires.py
           47: if all(data.values()):
           53: j = json.loads(json_rq)
           90: j = json.loads(json_rq)
          123: hosts.sort()
    File: ./charms/charm-interface-ceph-client/README.md
           37: with open(charm_ceph_conf, 'w') as cephconf:
           41: with open(cephx_key, 'w') as cephconf:

Package/directory: charm-interface-ceph-mds
    File: ./charms/charm-interface-ceph-mds/requires.py
           37: if all(data.values()):
           43: j = json.loads(json_rq)
           90: j = json.loads(json_rq)
          118: hosts.sort()
    File: ./charms/charm-interface-ceph-mds/README.md
           33: with open(charm_ceph_conf, 'w') as cephconf:
           37: with open(cephx_key, 'w') as cephconf:

Package/directory: charm-interface-gnocchi

Package/directory: charm-interface-hacluster
    File: ./charms/charm-interface-hacluster/requires.py
            1: #!/usr/bin/python
           67: relation_data = {k: v for k, v in crm.items() if v}
    File: ./charms/charm-interface-hacluster/common.py
            1: #!/usr/bin/python

Package/directory: charm-interface-keystone
    File: ./charms/charm-interface-keystone/requires.py
            1: #!/usr/bin/python
           80: if all(data.values()):
           91: if all(data.values()):
          105: for value in data.values():
          116: for value in data.values():

Package/directory: charm-interface-keystone-admin
    File: ./charms/charm-interface-keystone-admin/requires.py
           84: if all(data.values()):

Package/directory: charm-interface-keystone-credentials
    File: ./charms/charm-interface-keystone-credentials/requires.py
            1: #!/usr/bin/python
           51: for k, v in states.items():
           76: if all(data.values()):
           87: if all(data.values()):
           96: for value in data.values():

Package/directory: charm-interface-keystone-domain-backend

Package/directory: charm-interface-manila-plugin
    File: ./charms/charm-interface-manila-plugin/requires.py
          153: passed_keys = set(value.keys())
          176: existing_auth = json.loads(existing_auth_data)["data"]
          177: if (existing_auth.keys() == value.keys() and
          179: for k, v in existing_auth.items()])):
          265: result[_name] = json.loads(config)["data"]
    File: ./charms/charm-interface-manila-plugin/provides.py
          147: return json.loads(data)["data"]
          156: return json.loads(data)["data"]

Package/directory: charm-interface-mysql-shared
    File: ./charms/charm-interface-mysql-shared/requires.py
          137: if all(data.values()):
          148: if all(data.values()):
          161: if all(data.values()):
    File: ./charms/charm-interface-mysql-shared/README.md
           47: log("first_database=%s" % database.database("first"))
           48: log("first_username=%s" % database.username("first"))
           49: log("first_hostname=%s" % database.hostname("first"))
           50: log("second_database=%s" % database.database("second"))
           51: log("second_username=%s" % database.username("second"))
           52: log("second_hostname=%s" % database.hostname("second"))
           55: log("db_host=%s" % database.db_host())
           56: log("first_password=%s" % database.password("first"))
           57: log("first_allowed_units=%s" % database.allowed_units("first"))
           58: log("second_password=%s" % database.password("second"))
           59: log("second_allowed_units=%s" % database.allowed_units("second"))
           64: log("access-network=%s" % database.access_network())
           69: log("ssl_ca=%s" % database.ssl_ca())
           70: log("ssl_cert=%s" % database.ssl_cert())
           71: log("ssl_key=%s" % database.ssl_key())

Package/directory: charm-interface-neutron-plugin

Package/directory: charm-interface-neutron-plugin-api-subordinate

Package/directory: charm-interface-odl-controller-api
    File: ./charms/charm-interface-odl-controller-api/requires.py
           35: if all(data.values()):

Package/directory: charm-interface-openstack-ha
    File: ./charms/charm-interface-openstack-ha/peers.py
            1: #!/usr/bin/python
           56: if all(data.values()):

Package/directory: charm-interface-ovsdb-manager
    File: ./charms/charm-interface-ovsdb-manager/requires.py
           35: if all(data.values()):

Package/directory: charm-interface-rabbitmq
    File: ./charms/charm-interface-rabbitmq/requires.py
            1: #!/usr/bin/python
           71: if all(data.values()):
           83: if all(data.values()):

Package/directory: charm-interface-service-control

Package/directory: charm-keystone
    File: ./charms/charm-keystone/tests/basic_deployment.py
          217: for i in range(0, self.keystone_num_units):
          341: for i in range(0, self.keystone_num_units):
          366: for i in range(0, self.keystone_num_units):
          513: for key in expect.keys():
          531: for key in expect.keys():
          792: for section, pairs in expected.iteritems():
          841: data = json.loads(unit.file_contents(self.policy_json))
          867: for section, pairs in expected.iteritems():
          890: for s, conf_file in self.services_to_configs.iteritems():
    File: ./charms/charm-keystone/templates/icehouse/keystone.conf
           90: {% for key, value in ldap_config_flags.iteritems() -%}
    File: ./charms/charm-keystone/templates/ocata/keystone.conf
           89: {% for key, value in ldap_config_flags.iteritems() -%}
    File: ./charms/charm-keystone/templates/mitaka/keystone.conf
           89: {% for key, value in ldap_config_flags.iteritems() -%}
    File: ./charms/charm-keystone/templates/kilo/keystone.conf
          101: {% for key, value in ldap_config_flags.iteritems() -%}
    File: ./charms/charm-keystone/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-keystone/actions/resume
            1: #!/usr/bin/python
           55: return "Action %s undefined" % action_name
    File: ./charms/charm-keystone/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-keystone/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-keystone/actions/actions.py
            1: #!/usr/bin/python
           55: return "Action %s undefined" % action_name
    File: ./charms/charm-keystone/actions/pause
            1: #!/usr/bin/python
           55: return "Action %s undefined" % action_name
    File: ./charms/charm-keystone/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-keystone/hooks/start
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/keystone_context.py
           84: log("Creating apache ssl certs in %s" % (self.ssl_dir), level=INFO)
    File: ./charms/charm-keystone/hooks/ha-relation-joined
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/pgsql-db-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/pgsql-db-relation-joined
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/update-status
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/config-changed-postupgrade
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/leader-elected
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/identity-admin-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/keystone_utils.py
            1: #!/usr/bin/python
          498: for k, v in settings.iteritems():
          629: for cfg, rscs in resource_map().iteritems():
          636: for cfg, v in resource_map().iteritems()
          642: return list(set(chain(*restart_map().values())))
          769: subprocess.check_output(cmd)
          820: with open(STORED_TOKEN, 'r') as f:
          824: with open(STORED_TOKEN, 'w') as out:
          833: with open(KEYSTONE_CONF, 'r') as f:
          856: log("Deleted service entry '%s'" % service_name, level=DEBUG)
          864: log("Service entry for '%s' already exists." % service_name,
          871: log("Created new service entry '%s'" % service_name, level=DEBUG)
          912: log("Created new endpoint template for '%s' in '%s'" % (region, service),
          924: for ep_type in endpoints.keys():
          954: log("Created new tenant '%s' in domain '%s'" % (name, domain),
          958: log("Tenant '%s' already exists." % name, level=DEBUG)
          966: log("Domain '%s' already exists." % name, level=DEBUG)
          970: log("Created new domain: %s" % name, level=DEBUG)
         1005: log("A user named '%s' already exists in domain '%s'" % (name, domain),
         1014: "'%s'" % (tenant, domain))
         1028: log("Created new user '%s' tenant: '%s' domain: '%s'" % (name, tenant_id,
         1045: log("Created new role '%s'" % name, level=DEBUG)
         1047: log("A role named '%s' already exists" % name, level=DEBUG)
         1087: "'%s'" % (tenant, domain))
         1118: with open(backing_file, 'w+') as fd:
         1119: fd.writelines("%s\n" % data)
         1140: passwd = str(subprocess.check_output(cmd)).strip()
         1264: ep = "%s://%s:%s/%s" % (proto, ip, port, suffix)
         1266: ep = "%s://%s:%s" % (proto, ip, port)
         1283: log("Updating password for user '%s'" % username)
         1287: error_out("Could not resolve user id for '%s'" % username)
         1299: stored_passwd = open(path, 'r')
         1310: with open(STORED_PASSWD) as fd:
         1321: for k, v in creds.iteritems():
         1383: paths = glob.glob("%s/*" % (path))
         1426: log("Running %s" % (action), level=DEBUG)
         1429: log("Running %s" % (action), level=DEBUG)
         1432: log("Unknown action flag=%s" % (flag), level=WARNING)
         1451: log("Creating action %s" % (flagfile), level=DEBUG)
         1458: action = "%s.%s" % (local_unit().replace('/', '-'), action)
         1460: log("Creating action %s" % (flagfile), level=DEBUG)
         1499: rkeys = settings.keys()
         1519: if len(set_votes) == 1 and set_votes == set([local_unit()]):
         1547: elif (len(set_votes) == 1 and set_votes != set([local_unit()]) and
         1618: with tarfile.open(SSL_SYNC_ARCHIVE, 'w') as fd:
         1621: log("Adding path '%s' sync tarball" % (path), level=DEBUG)
         1625: "tarball" % (path), level=INFO)
         1671: log("Updating certs from '%s'" % (path), level=DEBUG)
         1672: with tarfile.open(path) as fd:
         1673: files = ["/%s" % m.name for m in fd.getmembers()]
         1682: os.rename(path, "%s.complete" % (path))
         1742: for action, services in peer_service_actions.iteritems():
         1806: "path='%s' - not going any deeper" % (recurse_depth, path),
         1810: for p in glob.glob("%s/*" % path):
         1814: with open(p, 'r') as fd:
         1938: result = str(subprocess.check_output(cmd)).split()
         1958: log("Creating service credentials for '%s'" % user, level=DEBUG)
         1960: log("User '%s' already exists" % (user), level=DEBUG)
         1975: log("No role grants requested for user '%s'" % (user), level=DEBUG)
         1981: log("Creating requested role '%s'" % role, level=DEBUG)
         2027: single = set(['service', 'region', 'public_url', 'admin_url',
         2035: if 'None' in settings.itervalues():
         2057: log("Creating requested role: %s" % role)
         2075: service_username = "%s%s" % (prefix, service_username)
         2101: for k, v in settings.iteritems():
         2134: service_username = "%s%s" % (prefix, service_username)
         2136: if 'None' in settings.itervalues():
         2297: if service not in valid_services.keys():
         2298: log("Invalid service requested: '%s'" % service)
         2385: keys += rs.keys()
         2392: for k, v in data.iteritems():
         2406: for k, v in data.iteritems():
         2413: log("Sending identity-service notifications (trigger=%s)" % (force),
         2444: log("%s does not yet have db permissions" % (local_unit()),
         2668: with open(backing_file, 'r') as fd:
    File: ./charms/charm-keystone/hooks/manager.py
            1: #!/usr/bin/python
    File: ./charms/charm-keystone/hooks/leader-settings-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/ha-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/identity-credentials-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/install.real
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/config-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/identity-credentials-relation-joined
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/upgrade-charm
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/keystone_hooks.py
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/stop
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/hooks/keystone_ssl.py
            1: #!/usr/bin/python
          142: with open(os.path.join(ca_dir, 'serial'), 'wb') as out:
          146: with open(os.path.join(ca_dir, 'index.txt'), 'wb') as out:
          152: with open(conf, 'wb') as out:
          197: log("Executing: %s" % ' '.join(cmd), level=DEBUG)
          220: with open(conf, 'wb') as out:
          240: with open(bundle_file, 'r') as f:
          248: with open(bundle_file, 'wb') as out:
          330: with open(crtpath, 'r') as f:
          332: with open(keypath, 'r') as f:
          353: with open(self.ca_cert_path) as f:
          355: with open(self.root_ca_cert_path) as f:
    File: ./charms/charm-keystone/hooks/domain-backend-relation-changed
            1: #!/usr/bin/python
          599: log("Setting %s=%s" % (key, bin(ssl_config)), level=DEBUG)
          642: log("Peer echo whitelist: %s" % (echo_whitelist), level=DEBUG)
          656: synced_units = json.loads(synced_units)
          734: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-keystone/unit_tests/test_utils.py
           45: with open(config) as f:
           55: for k, v in config.iteritems():
          123: def patch_open():
          124: '''Patch open() to allow mocking both open() itself and the file that is
          132: def stub_open(*args, **kwargs):
          133: mock_open(*args, **kwargs)
    File: ./charms/charm-keystone/unit_tests/test_keystone_hooks.py
          233: class mock_cls_config():
    File: ./charms/charm-keystone/unit_tests/test_keystone_utils.py
          147: self.assertTrue('/etc/memcached.conf' in utils.resource_map().keys())
          159: self.assertFalse('/etc/memcached.conf' in utils.resource_map().keys())
          386: for k, v in relation_data.iteritems():

Package/directory: charm-keystone-ldap
    File: ./charms/charm-keystone-ldap/src/tests/basic_deployment.py
           98: if all(keystone_ldap_config.values()):
    File: ./charms/charm-keystone-ldap/src/lib/charm/openstack/keystone_ldap.py
           81: return all(required_config.values())
    File: ./charms/charm-keystone-ldap/unit_tests/test_lib_charm_openstack_keystone_ldap.py
           31: for k, v in self._patches.items():

Package/directory: charm-layer-ceph-base
    File: ./charms/charm-layer-ceph-base/tests/10-deploy
            1: #!/usr/bin/python3
    File: ./charms/charm-layer-ceph-base/lib/charms/ceph_base.py
           90: hosts.sort()
           96: with open(apt_sources, "r") as sources:
           98: with open(apt_sources, "w") as sources:
          183: "error to retry" % (networks))
          277: tree = subprocess.check_output(
          281: json_tree = json.loads(tree)
          389: log("FATAL ERROR: %s" % msg,
          407: result = json.loads(subprocess.check_output(cmd).decode('utf-8'))
          434: result = json.loads(subprocess.check_output(cmd).decode('utf-8'))
          540: subprocess.check_output(['ceph', 'osd', 'out',
          547: subprocess.check_output(['stop', 'ceph-osd', 'id={}'.format(
          556: subprocess.check_output(['ceph', 'osd', 'crush', 'remove',
          559: subprocess.check_output(['ceph', 'auth', 'del',
          561: subprocess.check_output(['ceph', 'osd', 'rm',
          576: info = subprocess.check_output(['sgdisk', '-i', '1', dev]) \
          776: for subsystem, subcaps in caps.items():
          781: return parse_key(subprocess.check_output(cmd)
          793: for subsystem, subcaps in caps.items():
          833: with open(done, 'w'):
          835: with open(init_marker, 'w'):
          859: with open(init_marker, 'w'):
          875: out = subprocess.check_output(cmd).decode('utf-8').splitlines()
          985: result = subprocess.check_output(cmd).decode('utf-8')
          995: result = subprocess.check_output(cmd).decode('utf-8')
    File: ./charms/charm-layer-ceph-base/reactive/ceph_base.py
           55: statuses = set([])
           56: messages = set([])
           93: if len(units.keys()) < moncount:
           98: ready = sum(1 for unit_ready in units.values() if unit_ready)

Package/directory: charm-layer-openstack
    File: ./charms/charm-layer-openstack/templates/ceph.conf
           18: {% for key, value in rbd_client_cache_settings.items() -%}
    File: ./charms/charm-layer-openstack/templates/memcached.conf
           23: # Be even more verbose (print client commands as well)

Package/directory: charm-layer-openstack-api

Package/directory: charm-layer-openstack-principle

Package/directory: charm-lxd
    File: ./charms/charm-lxd/tests/lxd_amulet_utils.py
           96: with open(abs_file_name) as f:
    File: ./charms/charm-lxd/hooks/start
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/install
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/update-status
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/lxd-migration-relation-joined
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/lxd_hooks.py
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/lxd_utils.py
          328: target_tarball = tarfile.open(destination_tar, "w:")
          335: 'description': "Busybox %s" % os.uname()[4],
          336: 'name': "busybox-%s" % os.uname()[4],
          341: with open("/bin/busybox", "rb") as fd:
          361: symlink_file.name = "rootfs/%s" % path.strip()
          368: directory_file.name = "rootfs/%s" % path
          392: raise Exception("Failed to compress: %s" % destination_tar)
          428: output = check_output(cmd)
          475: with open(EXT4_USERNS_MOUNTS, 'w') as userns_mounts:
          485: with open('/etc/modules', 'r+') as modules:
          551: zpools = check_output(['zpool', 'list', '-H']).splitlines()
          570: with open(uidfile, 'r+') as f_id:
    File: ./charms/charm-lxd/hooks/lxd-relation-changed
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/lxd-migration-relation-changed
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/lxd-relation-joined
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/config-changed
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/upgrade-charm
          123: if all(settings.values()):
    File: ./charms/charm-lxd/hooks/stop
          123: if all(settings.values()):
    File: ./charms/charm-lxd/unit_tests/test_lxd_utils.py
          228: with testing.patch_open() as (_open, _file):
    File: ./charms/charm-lxd/unit_tests/testing.py
           46: return yaml.safe_load(open(config).read())['options']
           56: for k, v in config.iteritems():
          124: def patch_open():
          125: '''Patch open() to allow mocking both open() itself and the file that is
          133: def stub_open(*args, **kwargs):
          134: mock_open(*args, **kwargs)

Package/directory: charm-manila
    File: ./charms/charm-manila/src/tests/basic_deployment.py
          461: for s, conf_file in services.iteritems():
    File: ./charms/charm-manila/src/lib/charm/openstack/manila.py
          345: for name, config_files in config_data.items():
          346: for file, data in config_files.items():
          354: for name, chunk in inverted_config_data[config_file].items():
          372: for name, data in config_data.items():
          373: for config_file, chunks in data.items():

Package/directory: charm-manila-generic

Package/directory: charm-manila-glusterfs

Package/directory: charm-mistral
    File: ./charms/charm-mistral/src/tests/basic_deployment.py
          161: print("Running command: %s\n" % " ".join(command))
          162: output = subprocess.check_output(command)
          164: data = json.loads(output_json)
          172: output = subprocess.check_output(command)
          177: data = json.loads(output_json)
          210: for i in range(0, 20):
          226: exec_output = json.loads(_execution.output)
    File: ./charms/charm-mistral/src/reactive/mistral_handlers.py
           38: archive = tarfile.open(resource_tar)
    File: ./charms/charm-mistral/unit_tests/test_lib_charm_openstack_openvswitch_odl.py
           32: for k, v in self._patches.items():

Package/directory: charm-murano
    File: ./charms/charm-murano/src/tests/basic_deployment.py
          126: print("Running command: %s\n" % " ".join(command))
          127: output = subprocess.check_output(command)
          129: data = json.loads(output_json)
          137: output = subprocess.check_output(command)
          142: data = json.loads(output_json)
          219: murano_endpoint = "http://%s:8082" % (murano_ip)
          329: for s, conf_file in services.iteritems():
    File: ./charms/charm-murano/unit_tests/test_lib_charm_openstack_murano.py
           43: for k, v in self._patches.items():

Package/directory: charm-neutron-api
    File: ./charms/charm-neutron-api/tests/basic_deployment.py
          591: for section, pairs in expected.iteritems():
          657: for section, pairs in expected.iteritems():
          716: for s, conf_file in services.iteritems():
    File: ./charms/charm-neutron-api/templates/newton/neutron.conf
           63: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-neutron-api/templates/liberty/neutron.conf
           67: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-neutron-api/templates/icehouse/neutron.conf
           70: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-neutron-api/templates/juno/neutron.conf
           74: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-neutron-api/templates/mitaka/neutron.conf
           63: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-neutron-api/templates/pike/neutron.conf
           59: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-neutron-api/templates/kilo/neutron.conf
           72: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-neutron-api/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api/actions/resume
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-neutron-api/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api/actions/actions.py
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-neutron-api/actions/pause
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-neutron-api/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api/hooks/neutron-plugin-api-subordinate-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/start
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/identity-service-relation-broken
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/ha-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/etcd-proxy-relation-departed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/pgsql-db-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/midonet-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/pgsql-db-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/midonet-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/update-status
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron_api_context.py
          174: msg = "dns-domain '%s' is an invalid domain name." % dns_domain
          352: for k, v in _config.iteritems():
          578: for key in defaults.keys():
    File: ./charms/charm-neutron-api/hooks/etcd-proxy-relation-broken
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/pgsql-db-relation-broken
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron-api-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/etcd-proxy-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron-api-relation-broken
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron_api_utils.py
          357: with open(os.path.join(charm_dir(),
          371: with open(os.path.join(charm_dir(),
          407: for v in resource_map().values():
          447: for services in restart_map().values():
          514: for cfg, rscs in resource_map().iteritems():
          521: for cfg, v in resource_map().iteritems()
          528: for v in restart_map().values():
          537: with open(CA_CERT_PATH) as _in:
          564: pkgs.sort()
          590: subprocess.check_output(cmd)
          609: subprocess.check_output(cmd, shell=True)
          644: subprocess.check_output(cmd)
    File: ./charms/charm-neutron-api/hooks/neutron_api_hooks.py
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron-plugin-api-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron-plugin-api-subordinate-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/etcd-proxy-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/ha-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/vsd-rest-api-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/amqp-relation-departed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/zeromq-configuration-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron-plugin-api-subordinate-relation-departed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/midonet-relation-broken
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/neutron-api-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/install.real
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/config-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/stop
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/vsd-rest-api-relation-changed
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/amqp-relation-broken
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/shared-db-relation-broken
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/hooks/zeromq-configuration-relation-joined
            1: #!/usr/bin/python
          599: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-neutron-api/unit_tests/test_neutron_api_utils.py
           98: class DummyIdentityServiceContext():
          183: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          184: self.assertTrue(nutils.APACHE_24_CONF not in _map.keys())
          196: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          197: self.assertTrue(nutils.APACHE_24_CONF not in _map.keys())
          208: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          209: self.assertTrue(nutils.APACHE_CONF not in _map.keys())
          261: class _mock_OSConfigRenderer():
          289: with patch_open() as (_open, _file):
          324: pkgs.sort()
          384: pkgs.sort()
    File: ./charms/charm-neutron-api/unit_tests/test_utils.py
           47: return yaml.safe_load(open(config).read())['options']
           57: for k, v in config.iteritems():
          125: def patch_open():
          126: '''Patch open() to allow mocking both open() itself and the file that is
          134: def stub_open(*args, **kwargs):
          135: mock_open(*args, **kwargs)
    File: ./charms/charm-neutron-api/unit_tests/test_neutron_api_context.py
          713: for key in expect.iterkeys():
          733: for key in expect.iterkeys():
          750: for key in expect.iterkeys():
    File: ./charms/charm-neutron-api/unit_tests/test_neutron_api_hooks.py
          119: class DummyContext():
          140: return [randrange(100) for _count in range(2)]

Package/directory: charm-neutron-api-odl

Package/directory: charm-neutron-api-plumgrid
    File: ./charms/charm-neutron-api-plumgrid/bin/charm_helpers_sync.py
            1: #!/usr/bin/python
           41: return yaml.load(open(conf_file).read())
           80: open(_i, 'wb').close()
          249: logging.error("Could not sync: %s" % e)
    File: ./charms/charm-neutron-api-plumgrid/tests/gate-basic-trusty-kilo
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/tests/gate-basic-trusty-mitaka
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/tests/gate-basic-trusty-liberty
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/tests/gate-basic-xenial-mitaka
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/neutron_plumgrid_utils.py
           73: with open(SOURCES_LIST, 'r+') as sources:
          133: for cfg, rscs in resource_map().iteritems():
          144: for cfg, v in resource_map().iteritems()
    File: ./charms/charm-neutron-api-plumgrid/hooks/install
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/container-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/identity-admin-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/neutron_plumgrid_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/neutron-plugin-api-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/neutron-plugin-api-subordinate-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/plumgrid-configs-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/hooks/plumgrid-plugin-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-api-plumgrid/unit_tests/test_utils.py
           29: return yaml.safe_load(open(config).read())['options']
           39: for k, v in config.iteritems():
          107: def patch_open():
          108: '''Patch open() to allow mocking both open() itself and the file that is
          116: def stub_open(*args, **kwargs):
          117: mock_open(*args, **kwargs)
    File: ./charms/charm-neutron-api-plumgrid/unit_tests/test_neutron_plumgrid_plugin_utils.py
           21: class DummyContext():
           40: class _mock_OSConfigRenderer():
           61: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]

Package/directory: charm-neutron-gateway
    File: ./charms/charm-neutron-gateway/tests/basic_deployment.py
          177: output = subprocess.check_output(command)
          179: data = json.loads(output_json)
          187: output = subprocess.check_output(command)
          192: data = json.loads(output_json)
          589: for section, pairs in expected.iteritems():
          644: for section, pairs in expected.iteritems():
          766: for section, pairs in expected.iteritems():
          908: for section, pairs in expected.iteritems():
          939: for section, pairs in expected.iteritems():
         1034: for s, conf_file in services.iteritems():
         1096: for s, conf_file in services.iteritems():
    File: ./charms/charm-neutron-gateway/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-gateway/actions/resume
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-gateway/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-gateway/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-gateway/actions/actions.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-gateway/actions/pause
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-gateway/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-gateway/files/NeutronAgentMon
           79: pid=`sudo ps -aux | grep neutron-ha-m\[o\]nitor.py | awk -F' ' '{print $2}'`
           94: pid=`sudo ps -aux | grep neutron-ha-m\[o\]nitor.py | awk -F' ' '{print $2}'`
          105: pid=`sudo ps -aux | grep neutron-ha-m\[o\]nitor.py | awk -F' ' '{print $2}'`
          133: OCF_RESKEY_update=`expr $OCF_RESKEY_update / 1000`
    File: ./charms/charm-neutron-gateway/files/neutron-ha-monitor.py
           33: Usage: subclass the Daemon class and override the run() method
           66: stdin = open(self.stdin, 'r')
           67: stdout = open(self.stdout, 'a+')
           68: stderr = open(self.stderr, 'a+', 0)
          109: with open(envrc_f, 'r') as f:
          130: output = subprocess.check_output(cmd)
          169: for k in key1.iterkeys():
          174: ns = subprocess.check_output(cmd)
          370: ovs_output = subprocess.check_output(['ovs-vsctl',
          397: output = subprocess.check_output(status)
          399: subprocess.check_output(start)
          402: subprocess.check_output(['sudo', 'service',
          408: subprocess.check_output(restart)
          410: subprocess.check_output(['sudo', 'service',
    File: ./charms/charm-neutron-gateway/hooks/start
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/ha-relation-joined
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/neutron-plugin-api-relation-changed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/neutron-plugin-api-relation-departed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/update-status
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/neutron_contexts.py
          178: with open(_path, 'w') as secret_file:
          181: with open(_path, 'r') as secret_file:
    File: ./charms/charm-neutron-gateway/hooks/neutron-plugin-api-relation-broken
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/cluster-relation-broken
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/neutron_utils.py
          686: for ctxt in config_files[config('plugin')].itervalues():
          708: for f, ctxt in config_files[plugin].iteritems():
          816: for v in restart_map().values():
          865: for provider, br in bridgemaps.iteritems():
          870: for port, _br in portmaps.iteritems():
          911: for f, p in LEGACY_FILES_MAP.iteritems():
          917: for f, p in LEGACY_FILES_MAP.iteritems():
          937: with open(envrc_f, 'r') as f:
          952: with open(envrc_f, 'w') as f:
          953: for k, v in env.items():
          960: res = subprocess.check_output(cmd).decode('UTF-8')
    File: ./charms/charm-neutron-gateway/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/neutron-plugin-api-relation-joined
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/amqp-nova-relation-departed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/quantum-network-service-relation-broken
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/neutron_hooks.py
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/ha-relation-departed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/quantum-network-service-relation-changed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/amqp-relation-departed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/zeromq-configuration-relation-changed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/install.real
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/config-changed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/amqp-nova-relation-changed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/upgrade-charm
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/stop
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/amqp-nova-relation-joined
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/hooks/zeromq-configuration-relation-joined
            1: #!/usr/bin/python
          306: f = open(cronpath, 'w')
    File: ./charms/charm-neutron-gateway/unit_tests/test_utils.py
           29: return yaml.safe_load(open(config).read())['options']
           39: for k, v in config.iteritems():
    File: ./charms/charm-neutron-gateway/unit_tests/test_neutron_contexts.py
           24: def patch_open():
           25: '''Patch open() to allow mocking both open() itself and the file that is
           33: def stub_open(*args, **kwargs):
           34: mock_open(*args, **kwargs)
           41: class DummyNeutronAPIContext():
          308: with patch_open() as (_open, _file):
          318: with patch_open() as (_open, _file):
          344: for mod in self.mods.keys():
    File: ./charms/charm-neutron-gateway/unit_tests/test_neutron_utils.py
           62: for k, v1 in d1.iteritems():
          496: for services in rmap.itervalues():
          657: actual_configs = actual_map[neutron_utils.OVS].keys()
          672: actual_configs = actual_map[neutron_utils.OVS].keys()
          687: actual_configs = actual_map[neutron_utils.OVS].keys()
          700: actual_configs = actual_map[neutron_utils.OVS].keys()
          713: actual_configs = actual_map[neutron_utils.OVS].keys()
          732: class DummyNetworkServiceContext():
          741: class DummyExternalPortContext():
          896: dummy_client.list_agents.side_effect = agents_all_alive.itervalues()
          910: agents_some_dead_cl2.itervalues()
          952: agents_some_dead_cl1.itervalues()

Package/directory: charm-neutron-openvswitch
    File: ./charms/charm-neutron-openvswitch/tests/basic_deployment.py
          223: for section, pairs in expected.iteritems():
          308: msg = "Propagation error, expected %s=%s" % (config_file_key,
          347: msg = "Propagation error, expected %s=%s" % ('enable_security_group',
          381: for s, conf_file in services.iteritems():
    File: ./charms/charm-neutron-openvswitch/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-openvswitch/actions/resume
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-openvswitch/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-openvswitch/actions/pause_resume.py
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-openvswitch/actions/pause
            1: #!/usr/bin/python
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-plugin-api-relation-changed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/install
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-plugin-api-relation-departed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/amqp-relation-joined
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/update-status
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron_ovs_hooks.py
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/pci.py
            1: #!/usr/bin/python
           81: with open(mac_addr_file, 'r') as f:
           95: with open(state_file, 'r') as f:
          124: with open(sriov_totalvfs_file, 'r') as f:
          140: with open(sriov_numvfs_file, 'r') as f:
          187: with open(sdevice, 'w') as sh:
          199: lspci_output = subprocess.check_output(cmd)
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-control-relation-broken
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-plugin-api-relation-broken
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/amqp-relation-changed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-control-relation-departed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-plugin-relation-joined
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-plugin-relation-changed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron_ovs_utils.py
          321: for cfg, rscs in resource_map().iteritems():
          392: return {k: v['services'] for k, v in resource_map().iteritems()}
          414: s_set = set(chain(*restart_map().values()))
          458: for br in bridgemaps.itervalues():
          463: for port, _br in portmaps.iteritems():
          474: for br in dpdk_bridgemaps.itervalues():
    File: ./charms/charm-neutron-openvswitch/hooks/amqp-relation-departed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/zeromq-configuration-relation-changed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-control-relation-joined
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/config-changed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/upgrade-charm
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron_ovs_context.py
          256: for mac, bridge in portmap.iteritems():
          281: cores += range(int(cpu_min_max[0]),
          292: with open(os.path.join(node, 'cpulist')) as cpulist:
          314: for cores in numa_node_cores().itervalues():
          358: with open(SHARED_SECRET, 'w') as secret_file:
          361: with open(SHARED_SECRET, 'r') as secret_file:
          394: for k, v in remote_data.items():
          401: for restart_key in ctxt.keys():
    File: ./charms/charm-neutron-openvswitch/hooks/stop
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-control-relation-changed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/neutron-plugin-relation-departed
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/amqp-relation-broken
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/hooks/zeromq-configuration-relation-joined
            1: #!/usr/bin/python
           80: with open(OVS_DEFAULT, 'r') as f:
    File: ./charms/charm-neutron-openvswitch/unit_tests/test_pci.py
           59: with patch_open() as (_open, _file):
          158: with patch_open() as (_open, _file):
          168: with patch_open() as (_open, _file):
          197: with patch_open() as (_open, _file):
    File: ./charms/charm-neutron-openvswitch/unit_tests/test_pci_helper.py
            1: #!/usr/bin/python
           34: for key in pci_responses.COMMANDS.keys():
          102: with patch_open() as (_open, _file), \
    File: ./charms/charm-neutron-openvswitch/unit_tests/test_neutron_ovs_context.py
           92: list_nics.return_value = machine_machs.keys()
          457: with patch_open() as (_open, _file):
          467: with patch_open() as (_open, _file):
          529: with patch_open() as (_, mock_file):
    File: ./charms/charm-neutron-openvswitch/unit_tests/test_utils.py
           43: return yaml.safe_load(open(config).read())['options']
           53: for k, v in config.iteritems():
          121: def patch_open():
          122: '''Patch open() to allow mocking both open() itself and the file that is
          130: def stub_open(*args, **kwargs):
          131: mock_open(*args, **kwargs)
    File: ./charms/charm-neutron-openvswitch/unit_tests/test_neutron_ovs_utils.py
           88: class DummyContext():
          241: class _mock_OSConfigRenderer():
          263: class _mock_OSConfigRenderer():
          291: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          305: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          318: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          332: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          346: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          361: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]
          370: self.assertTrue(nutils.NEUTRON_CONF in _map.keys())
          371: self.assertTrue(nutils.PHY_NIC_MTU_CONF in _map.keys())
          372: self.assertFalse(nutils.EXT_PORT_CONF in _map.keys())
          375: self.assertTrue(nutils.EXT_PORT_CONF in _map.keys())
          383: self.assertTrue(nutils.NEUTRON_CONF in _map.keys())
          384: self.assertFalse(nutils.PHY_NIC_MTU_CONF in _map.keys())
          385: self.assertFalse(nutils.EXT_PORT_CONF in _map.keys())
          388: self.assertFalse(nutils.EXT_PORT_CONF in _map.keys())
    File: ./charms/charm-neutron-openvswitch/unit_tests/pci_responses.py
           46: 0000:0b:00.0 "RAID bus controller" "LSI Logic / Symbios Logic" "MegaRAID SAS-3 3108 [Invader]" -r02 "Cisco Systems Inc" "Device 00db"
    File: ./charms/charm-neutron-openvswitch/unit_tests/test_neutron_ovs_hooks.py
          106: with open('unit_tests/%s' % sample, 'r') as f:
          109: with patch('__builtin__.open', mock_open(read_data=content),

Package/directory: charm-nova-cloud-controller
    File: ./charms/charm-nova-cloud-controller/tests/basic_deployment.py
          780: for section, pairs in expected.iteritems():
          892: for s, conf_file in services.iteritems():
    File: ./charms/charm-nova-cloud-controller/templates/liberty/nova.conf
           99: {% for key, value in network_manager_config.iteritems() -%}
          119: {% for key, value in user_config_flags.iteritems() -%}
          125: {% for key, value in listen_ports.iteritems() -%}
    File: ./charms/charm-nova-cloud-controller/templates/icehouse/nova.conf
           99: {% for key, value in network_manager_config.iteritems() -%}
          140: {% for key, value in user_config_flags.iteritems() -%}
          146: {% for key, value in listen_ports.iteritems() -%}
    File: ./charms/charm-nova-cloud-controller/templates/juno/nova.conf
           99: {% for key, value in network_manager_config.iteritems() -%}
          137: {% for key, value in user_config_flags.iteritems() -%}
          143: {% for key, value in listen_ports.iteritems() -%}
    File: ./charms/charm-nova-cloud-controller/templates/ocata/nova.conf
           81: {% for key, value in network_manager_config.iteritems() -%}
          101: {% for key, value in user_config_flags.iteritems() -%}
          107: {% for key, value in listen_ports.iteritems() -%}
    File: ./charms/charm-nova-cloud-controller/templates/mitaka/nova.conf
           88: {% for key, value in network_manager_config.iteritems() -%}
          109: {% for key, value in user_config_flags.iteritems() -%}
          115: {% for key, value in listen_ports.iteritems() -%}
    File: ./charms/charm-nova-cloud-controller/templates/kilo/nova.conf
           99: {% for key, value in network_manager_config.iteritems() -%}
          119: {% for key, value in user_config_flags.iteritems() -%}
          125: {% for key, value in listen_ports.iteritems() -%}
    File: ./charms/charm-nova-cloud-controller/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-nova-cloud-controller/actions/resume
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-nova-cloud-controller/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-nova-cloud-controller/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-nova-cloud-controller/actions/actions.py
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-nova-cloud-controller/actions/pause
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-nova-cloud-controller/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-nova-cloud-controller/files/quantum-ext-net
            1: #!/usr/bin/python
    File: ./charms/charm-nova-cloud-controller/files/quantum-tenant-net
            1: #!/usr/bin/python
    File: ./charms/charm-nova-cloud-controller/hooks/start
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova_cc_utils.py
          410: for cfg, rscs in resource_map().iteritems():
          425: for cfg, v in resource_map(actual_services).iteritems()
          432: for v in restart_map().values():
          440: for services in restart_map(actual_services=False).values():
          479: for v in resource_map(actual_services=False).values():
          554: with open(fpath, 'r') as f:
          556: for target_src, (cur_pocket, step_src) in sources.items():
          581: with open('/usr/sbin/policy-rc.d', 'w') as policy:
          715: subprocess.check_output(cmd)
          729: subprocess.check_output(cmd)
          742: subprocess.check_output(cmd)
          755: subprocess.check_output(cmd)
          770: subprocess.check_output(cmd)
          779: subprocess.check_output(cmd)
          798: out = subprocess.check_output(cmd)
          819: subprocess.check_output(cmd)
          841: subprocess.check_output(cmd)
          854: subprocess.check_output(cmd)
          911: with open(CA_CERT_PATH) as _in:
          929: open(f, 'w').close()
          946: output = subprocess.check_output(cmd).strip()
          979: remote_key = subprocess.check_output(cmd).strip()
          993: with open(known_hosts(unit, user), 'a') as out:
          998: with open(authorized_keys(unit, user)) as keys:
         1003: with open(authorized_keys(unit, user), 'a') as keys:
         1043: with open(known_hosts(unit, user)) as hosts:
         1053: with open(authorized_keys(unit, user)) as keys:
         1065: with open(authorized_keys(unit, user)) as _keys:
         1073: with open(authorized_keys(unit, user), 'w') as _keys:
         1226: with open('/etc/init/{}.override'.format(svc), 'wb') as out:
    File: ./charms/charm-nova-cloud-controller/hooks/identity-service-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/ha-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/memcache-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/neutron-api-relation-departed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cinder-volume-service-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/pgsql-neutron-db-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/update-status
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cloud-compute-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/neutron-api-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova-volume-service-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/pgsql-nova-db-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova_cc_hooks.py
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/pgsql-neutron-db-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova-vmware-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/neutron-api-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/image-service-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cell-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/quantum-network-service-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cinder-volume-service-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cell-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/image-service-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/memcache-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/memcache-relation-departed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/leader-settings-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova-vmware-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/pgsql-nova-db-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cloud-compute-relation-departed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cloud-compute-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova_cc_context.py
           51: for k, v in ctxt.iteritems():
          313: servers.append("%s:%s" % (priv_addr, rel['port']))
          315: log("Could not get memcache servers: %s" % (ex), level='WARNING')
          361: with open(cert_path, 'w') as fh:
          363: with open(key_path, 'w') as fh:
          378: url = "https://%s:%s%s" % (
          426: ctxt = {prefix.format(k): v for k, v in ctxt.items()}
    File: ./charms/charm-nova-cloud-controller/hooks/quantum-network-service-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cinder-volume-service-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/ha-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/amqp-relation-departed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/zeromq-configuration-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cell-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/neutron-api-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/install.real
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/config-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova-volume-service-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nova-volume-service-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/upgrade-charm
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/memcache-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/stop
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/amqp-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/pgsql-neutron-db-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/pgsql-nova-db-relation-changed
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/shared-db-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/image-service-relation-broken
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/hooks/zeromq-configuration-relation-joined
            1: #!/usr/bin/python
          306: with open('/etc/init/neutron-server.override', 'wb') as out:
          596: with open('/etc/quantum/novarc', 'wb') as out:
          662: proxy_base_addr = "%s://%s" % (schema, config('console-proxy-ip'))
          670: "%s:%s%s" % (proxy_base_addr,
          879: "vip group - skipping" % (vip_key, vip), WARNING)
         1028: 'nova_url': "%s:8774/v2" % canonical_url(CONFIGS, INTERNAL)
    File: ./charms/charm-nova-cloud-controller/unit_tests/test_nova_cc_utils.py
          167: """ % GPG_PPA_CLOUD_ARCHIVE
          174: """ % GPG_PPA_CLOUD_ARCHIVE
          490: with patch_open() as (_open, _file):
          537: with patch_open() as (_open, _file):
          550: with patch_open() as (_open, _file):
          562: with patch_open() as (_open, _file):
          610: with patch_open() as (_open, _file):
          617: with patch_open() as (_open, _file):
          639: with patch_open() as (_open, _file):
    File: ./charms/charm-nova-cloud-controller/unit_tests/test_utils.py
           44: return yaml.safe_load(open(config).read())['options']
           54: for k, v in config.iteritems():
          124: def patch_open():
          125: '''Patch open() to allow mocking both open() itself and the file that is
          133: def stub_open(*args, **kwargs):
          134: mock_open(*args, **kwargs)
    File: ./charms/charm-nova-cloud-controller/unit_tests/test_nova_cc_contexts.py
           91: self.assertEqual({'memcached_servers': "%s:11211" % (formated_ip, )},

Package/directory: charm-nova-compute
    File: ./charms/charm-nova-compute/tests/basic_deployment.py
          552: for section, pairs in expected.iteritems():
          623: for s, conf_file in services.iteritems():
          679: for s, conf_file in services.iteritems():
    File: ./charms/charm-nova-compute/templates/liberty/nova.conf
           81: {% for key, value in network_manager_config.iteritems() -%}
          101: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-nova-compute/templates/icehouse/nova.conf
          100: {% for key, value in network_manager_config.iteritems() -%}
          123: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-nova-compute/templates/juno/nova.conf
           99: {% for key, value in network_manager_config.iteritems() -%}
          119: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-nova-compute/templates/ocata/nova.conf
           82: {% for key, value in network_manager_config.iteritems() -%}
          103: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-nova-compute/templates/mitaka/nova.conf
           81: {% for key, value in network_manager_config.iteritems() -%}
          102: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-nova-compute/templates/kilo/nova.conf
           81: {% for key, value in network_manager_config.iteritems() -%}
          101: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-nova-compute/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/actions/resume
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/actions/pause_resume.py
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/actions/pause
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova_compute_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/pgsql-db-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/amqp-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/pgsql-db-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova-ceilometer-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/cloud-compute-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/pgsql-db-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/ceph-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/ceph-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/ceph-access-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/image-service-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova_compute_context.py
           78: with open(path, 'wb') as out:
          449: missing = [k for k, v in neutron_ctxt.iteritems() if v in ['', None]]
    File: ./charms/charm-nova-compute/hooks/ephemeral-backend-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova-designate-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova-ceilometer-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/ceph-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/amqp-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova-designate-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/cloud-compute-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/neutron-plugin-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/lxd-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/neutron-plugin-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/lxd-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/amqp-relation-departed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/zeromq-configuration-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/ephemeral-backend-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/install.real
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/ceph-access-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova_compute_utils.py
          354: for data in resource_map.values():
          383: return {k: v['services'] for k, v in resource_map().iteritems()}
          388: return list(set(chain(*restart_map().itervalues())))
          409: open(ceph_config_file(), 'w').close()
          413: for cfg, d in resource_map().iteritems():
          508: with open(os.path.join(home, '.ssh', 'id_rsa.pub')) as key:
          525: check_output(cmd)
          531: p = check_output(cmd).strip()
          532: with open(pub_key, 'wb') as out:
          534: check_output(['chown', '-R', user, ssh_dir])
          540: current_smt_state = check_output(['ppc64_cpu', '--smt'])
          555: check_output(cmd)
          575: for index in range(0, int(known_hosts_index)):
          581: for index in range(0, int(authorized_keys_index)):
          588: for index in range(0, int(known_hosts_index)):
          593: for index in range(0, int(authorized_keys_index)):
          608: with open(dest_known_hosts, 'wb') as _hosts:
          609: for index in range(0, int(known_hosts_index)):
          611: with open(dest_auth_keys, 'wb') as _keys:
          612: for index in range(0, int(authorized_keys_index)):
          651: with open(CA_CERT_PATH, 'wb') as out:
          658: if secret_uuid in check_output(['virsh', '-c', uri, 'secret-list']):
          659: old_key = check_output(['virsh', '-c', uri, 'secret-get-value',
          680: out = check_output(['virsh', 'net-list']).split('\n')
          928: hugepage_multiplier = float(hugepage_config_pct) / 100
          929: hugepages = int((mem.total * hugepage_multiplier) / hugepage_size)
    File: ./charms/charm-nova-compute/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/neutron-plugin-relation-departed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/amqp-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/nova-designate-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/shared-db-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/compute-peer-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/image-service-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/hooks/zeromq-configuration-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute/unit_tests/test_nova_compute_utils.py
          262: self.assertEqual(set(ex.keys()), set(result.keys()))
          263: for k in ex.keys():
          316: self.assertEqual(set(ex.keys()), set(result.keys()))
          317: for k in ex.keys():
          381: self.assertEqual(set(ex.keys()), set(result.keys()))
          382: for k in ex.keys():
          434: self.assertEqual(set(ex.keys()), set(result.keys()))
          435: for k in ex.keys():
          479: with patch_open() as (_open, _file):
          486: with patch_open() as (_open, _file):
          519: with patch_open() as (_open, _file):
          556: with patch_open() as (_open, _file):
          564: with patch_open() as (_open, _file):
    File: ./charms/charm-nova-compute/unit_tests/test_utils.py
           46: return yaml.safe_load(open(config).read())['options']
           56: for k, v in config.iteritems():
          124: def patch_open():
          125: '''Patch open() to allow mocking both open() itself and the file that is
          133: def stub_open(*args, **kwargs):
          134: mock_open(*args, **kwargs)
    File: ./charms/charm-nova-compute/unit_tests/test_nova_compute_contexts.py
           55: print '[juju test log (%s)] %s' % (level, msg)
           62: for name, value in kwargs.items():

Package/directory: charm-nova-compute-proxy
    File: ./charms/charm-nova-compute-proxy/bin/charm_helpers_sync.py
            1: #!/usr/bin/python
           41: return yaml.load(open(conf_file).read())
           80: open(_i, 'wb').close()
          249: logging.error("Could not sync: %s" % e)
    File: ./charms/charm-nova-compute-proxy/tests/basic_deployment.py
           78: self.status = yaml.load(subprocess.check_output(get_status_cmd))
           93: subprocess.check_output(cmd).decode('UTF-8')
          105: ['remote-compute']['units'].keys()[0])
          115: subprocess.check_output(cmd).decode('UTF-8').strip())
          139: with open('files/id_rsa_tmp', 'r') as key_file:
          434: for section, pairs in expected.iteritems():
    File: ./charms/charm-nova-compute-proxy/templates/mitaka/nova.conf
           31: {% for key, value in network_manager_config.iteritems() -%}
           48: {% for key, value in user_config_flags.iteritems() -%}
    File: ./charms/charm-nova-compute-proxy/hooks/nova_compute_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/neutron-plugin-api-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/neutron-plugin-api-relation-departed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/amqp-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/nova-ceilometer-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/cloud-compute-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/image-service-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/nova_compute_context.py
           95: for k, v in ctxt.iteritems():
          132: missing = [k for k, v in neutron_ctxt.iteritems() if v in ['', None]]
    File: ./charms/charm-nova-compute-proxy/hooks/neutron-plugin-api-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/nova-ceilometer-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/amqp-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/neutron-plugin-api-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/cloud-compute-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/amqp-relation-departed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/install.real
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/nova_compute_utils.py
          130: return {k: v['services'] for k, v in resource_map().iteritems()}
          136: for v in restart_map().values():
          148: for cfg, d in resource_map().iteritems():
    File: ./charms/charm-nova-compute-proxy/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/nova_compute_proxy.py
           79: class REMOTEProxy():
          128: with open(filename, 'w') as f:
          149: "%s%s" % (CHARM_SCRATCH_DIR, target),
          176: if os.path.exists("%s%s" % (CHARM_SCRATCH_DIR, f)):
    File: ./charms/charm-nova-compute-proxy/hooks/amqp-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/hooks/image-service-relation-broken
            1: #!/usr/bin/python
    File: ./charms/charm-nova-compute-proxy/unit_tests/test_utils.py
           46: return yaml.safe_load(open(config).read())['options']
           56: for k, v in config.iteritems():
          124: def patch_open():
          125: '''Patch open() to allow mocking both open() itself and the file that is
          133: def stub_open(*args, **kwargs):
          134: mock_open(*args, **kwargs)
    File: ./charms/charm-nova-compute-proxy/unit_tests/test_nova_compute_contexts.py
           53: for name, value in kwargs.items():

Package/directory: charm-odl-controller
    File: ./charms/charm-odl-controller/hooks/odl_controller_utils.py
          143: output = subprocess.check_output(run_cmd)
          171: for log_level in logging.keys():
    File: ./charms/charm-odl-controller/unit_tests/test_utils.py
           46: return yaml.safe_load(open(config).read())['options']
           56: for k, v in config.iteritems():
          124: def patch_open():
          125: '''Patch open() to allow mocking both open() itself and the file that is
          133: def stub_open(*args, **kwargs):
          134: mock_open(*args, **kwargs)
    File: ./charms/charm-odl-controller/unit_tests/odl_outputs.py
          228: gemini-blueprint                      | 1.0.0.RELEASE       |           | spring-3.0.1                             | Gemini Blueprint Extender

Package/directory: charm-openstack-dashboard
    File: ./charms/charm-openstack-dashboard/tests/basic_deployment.py
          156: if key in expected.keys():
          158: msg = "Mismatch %s != %s" % (expected[key], value)
          232: response = urllib2.urlopen('http://%s/horizon' % (dashboard_ip))
          254: urllib2.urlopen('http://%s/server-status' % (dashboard_ip))
          283: for s, conf_file in services.iteritems():
    File: ./charms/charm-openstack-dashboard/templates/newton/local_settings.py
          202: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v3" % OPENSTACK_HOST
          207: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v2.0" % OPENSTACK_HOST
          856: # the client side. Some settings are required by in-tree / built-in horizon
    File: ./charms/charm-openstack-dashboard/templates/liberty/local_settings.py
          162: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v2.0" % OPENSTACK_HOST
          735: # the client side. Some settings are required by in-tree / built-in horizon
    File: ./charms/charm-openstack-dashboard/templates/icehouse/local_settings.py
          140: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v2.0" % OPENSTACK_HOST
    File: ./charms/charm-openstack-dashboard/templates/ocata/local_settings.py
          202: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v3" % OPENSTACK_HOST
          207: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v2.0" % OPENSTACK_HOST
          855: # the client side. Some settings are required by in-tree / built-in horizon
    File: ./charms/charm-openstack-dashboard/templates/mitaka/local_settings.py
          202: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v3" % OPENSTACK_HOST
          207: OPENSTACK_KEYSTONE_URL = "{{ service_protocol }}://%s:{{ service_port }}/v2.0" % OPENSTACK_HOST
          815: # the client side. Some settings are required by in-tree / built-in horizon
    File: ./charms/charm-openstack-dashboard/actions/git_reinstall.py
            1: #!/usr/bin/python
    File: ./charms/charm-openstack-dashboard/actions/resume
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-openstack-dashboard/actions/git-reinstall
            1: #!/usr/bin/python
    File: ./charms/charm-openstack-dashboard/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-openstack-dashboard/actions/actions.py
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-openstack-dashboard/actions/pause
            1: #!/usr/bin/python
           53: return "Action %s undefined" % action_name
    File: ./charms/charm-openstack-dashboard/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-openstack-dashboard/hooks/start
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/ha-relation-joined
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/shared-db-relation-joined
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/update-status
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/identity-service-relation-departed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/install.real
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/config-changed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/horizon_contexts.py
           81: with open('/etc/default/haproxy', 'w') as out:
          241: with open('/etc/ssl/certs/dashboard.cert', 'w') as cert_out:
          243: with open('/etc/ssl/private/dashboard.key', 'w') as key_out:
          281: if set(('local-settings', 'priority')) <= set(rdata.keys()):
    File: ./charms/charm-openstack-dashboard/hooks/upgrade-charm
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/dashboard-plugin-relation-joined
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/stop
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/dashboard-plugin-relation-changed
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/website-relation-joined
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/horizon_utils.py
          115: APACHE_CONF = "%s/conf.d/openstack-dashboard.conf" % (APACHE_CONF_DIR)
          118: PORTS_CONF = "%s/ports.conf" % (APACHE_CONF_DIR)
          119: APACHE_24_SSL = "%s/sites-available/default-ssl.conf" % (APACHE_CONF_DIR)
          120: APACHE_24_DEFAULT = "%s/sites-available/000-default.conf" % (APACHE_CONF_DIR)
          121: APACHE_SSL = "%s/sites-available/default-ssl" % (APACHE_CONF_DIR)
          122: APACHE_DEFAULT = "%s/sites-available/default" % (APACHE_CONF_DIR)
          246: for f, ctxt in CONFIG_FILES.iteritems():
          258: for v in restart_map().values():
          390: for name, files in copy_files.iteritems():
          402: for name, dirs in copy_trees.iteritems():
    File: ./charms/charm-openstack-dashboard/hooks/shared-db-relation-broken
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/hooks/horizon_hooks.py
            1: #!/usr/bin/python
          241: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-openstack-dashboard/unit_tests/test_utils.py
           42: return yaml.safe_load(open(config).read())['options']
           52: for k, v in config.iteritems():
    File: ./charms/charm-openstack-dashboard/unit_tests/test_horizon_contexts.py
           39: def patch_open():
           40: '''Patch open() to allow mocking both open() itself and the file that is
           48: def stub_open(*args, **kwargs):
           49: mock_open(*args, **kwargs)
           99: with patch_open() as (_open, _file):
          536: with patch_open() as (_open, _file):
          553: with patch_open() as (_open, _file):
    File: ./charms/charm-openstack-dashboard/unit_tests/test_horizon_hooks.py
          184: [side_effects.append(None) for f in RESTART_MAP.keys()]
          185: [side_effects.append('bar') for f in RESTART_MAP.keys()]

Package/directory: charm-openvswitch-odl
    File: ./charms/charm-openvswitch-odl/src/lib/charm/openstack/openvswitch_odl.py
           39: bridges = subprocess.check_output(['ovs-vsctl',
           89: for mac in requested_config.keys():
    File: ./charms/charm-openvswitch-odl/unit_tests/test_lib_charm_openstack_openvswitch_odl.py
           35: for k, v in self._patches.items():

Package/directory: charm-percona-cluster
    File: ./charms/charm-percona-cluster/tests/basic_deployment.py
           38: with open('local.yaml', 'rb') as f:
          137: m for m in range(self.units)]
          161: " (wanted=%s, got=%s)" % (self.units, got))
          180: assert output == leader_uuid, "%s != %s" % (output,
          196: # Note that is_mysqld_running will print an error message when
          241: assert self.is_port_open(address=self.vip), 'cannot connect to vip'
          304: self.log.debug("command returned non-zero '%s'" % (code))
          319: self.log.debug("command returned non-zero '%s'" % (code))
          323: self.log.info("%s = %s" % (attr, value))
          333: def is_port_open(self, unit=None, port='3306', address=None):
          346: self.log.error("could not connect to %s:%s" % (addr, port))
          349: " to %s:%s" % (addr,
    File: ./charms/charm-percona-cluster/actions/resume
            1: #!/usr/bin/python
    File: ./charms/charm-percona-cluster/actions/backup
            1: #!/usr/bin/python
    File: ./charms/charm-percona-cluster/actions/actions.py
            1: #!/usr/bin/python
    File: ./charms/charm-percona-cluster/actions/pause
            1: #!/usr/bin/python
    File: ./charms/charm-percona-cluster/hooks/start
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/ha-relation-joined
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/db-admin-relation-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/update-status
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/leader-elected
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/shared-db-relation-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/percona_utils.py
           95: "Leader UUID ('%s') != Unit UUID ('%s')" % (leader_uuid,
          105: """This class is to provide to register_configs() as a 'fake'
          138: with open(SEEDED_MARKER.format(data_dir=resolve_data_dir()),
          145: with open('/etc/apt/sources.list.d/percona.list', 'w') as sources:
          200: "(expected=%s, got=%s)" % (min_size, units), level=INFO)
          239: "for addr %s" % (unit, hostname, cluster_address),
          278: dconf = Popen(['debconf-set-selections'], stdin=PIPE)
          313: with open(HOSTS_FILE, 'r') as hosts:
          316: log("Updating %s with: %s (current: %s)" % (HOSTS_FILE, map, lines),
          320: for ip, hostname in map.items():
          330: log("Marking line '%s' for update or removal" % (line.strip()),
          334: newlines.append("%s %s\n" % (ip, hostname))
          339: with open(tmpfile.name, 'w') as hosts:
          373: log("'%s' already exists, skipping" % dest_file, level='INFO')
          387: cursor.execute("show status like '%s'" % (key))
          418: log("Found inconsistent bootstrap uuids - %s" % (uuids), WARNING)
          490: log("wsrep_ready: '%s'" % wsrep_ready, DEBUG)
          497: log("UUID is empty: '%s'" % cluster_state_uuid, level=DEBUG)
          677: "mysql data dir" % (binlogs_directory))
          854: log("Error connecting using new passowrd: %s" % str(ex), level=DEBUG)
    File: ./charms/charm-percona-cluster/hooks/leader-settings-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/percona_hooks.py
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/ha-relation-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/install.real
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/config-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/leader-deposed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/upgrade-charm
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/stop
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/hooks/db-relation-changed
            1: #!/usr/bin/python
          243: log("Failed to start mysql - retrying in %ss" % (delay),
          324: log("Leader unit - bootstrap required=%s" % (not bootstrapped),
          367: log("Setting cluster relation: '%s'" % (relation_settings),
          388: for attr in rdata.iterkeys():
          500: hosts = json.loads(hosts)
          501: log("Multiple hostnames provided by relation: %s" % (', '.join(hosts)),
          504: log("Single hostname provided by relation: %s" % (hosts),
          534: passwords = [key for key in client_settings.keys()
          551: singleset = set(['database', 'username', 'hostname'])
          604: for k, v in settings.iteritems():
    File: ./charms/charm-percona-cluster/ocf/percona/mysql_monitor
          264: -e "SHOW VARIABLES like 'read_only'" | awk '{print $2}'`
    File: ./charms/charm-percona-cluster/unit_tests/test_percona_hooks.py
          425: "%s is not file" % seeded_file)
          426: with open(seeded_file) as f:
    File: ./charms/charm-percona-cluster/unit_tests/test_utils.py
           30: return yaml.safe_load(open(config).read())['options']
           40: for k, v in config.iteritems():
          125: def patch_open():
          126: '''Patch open() to allow mocking both open() itself and the file that is
          134: def stub_open(*args, **kwargs):
          135: mock_open(*args, **kwargs)
    File: ./charms/charm-percona-cluster/unit_tests/test_percona_utils.py
           28: with open(tmpfile.name, 'r') as fd:
           33: self.assertEqual(lines[0], "%s %s\n" % (map.items()[0]))
           41: with open(tmpfile.name, 'w') as fd:
           42: fd.write("%s %s\n" % (map.items()[0]))
           46: with open(tmpfile.name, 'r') as fd:
           51: self.assertEqual(lines[0], "%s %s\n" % (map.items()[0]))
           63: with open(tmpfile.name, 'w') as fd:
           65: fd.write("%s %s\n" % (altmap.items()[0]))
           69: with open(percona_utils.HOSTS_FILE, 'r') as fd:
           75: self.assertEqual(lines[1], "%s %s\n" % (map.items()[0]))
           76: self.assertEqual(lines[4], "%s %s\n" % (map.items()[3]))

Package/directory: charm-plumgrid-director
    File: ./charms/charm-plumgrid-director/bin/charm_helpers_sync.py
            1: #!/usr/bin/python
           41: return yaml.load(open(conf_file).read())
           80: open(_i, 'wb').close()
          249: logging.error("Could not sync: %s" % e)
    File: ./charms/charm-plumgrid-director/actions/sapi-post-zone-info
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-director/actions/restart-pg
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-director/actions/sapi-post-ips
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-director/actions/actions.py
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-director/actions/sapi-post-license
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-director/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/plumgrid-configs-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/install
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/pg_dir_utils.py
          110: with open(SOURCES_LIST, 'r+') as sources:
          136: status = subprocess.check_output(sigmund_status, shell=True)
          180: for cfg, rscs in resource_map().iteritems():
          199: return {cfg: rscs['services'] for cfg, rscs in resource_map().iteritems()}
          253: stdout=open(os.devnull, 'w'),
          287: with open(PG_IFCS_CONF, 'r') as ifcs:
          306: all_fabric_interfaces = json.loads(fabric_interfaces)
          366: fr = open(AUTH_KEY_PATH, 'r')
          375: fa = open(AUTH_KEY_PATH, file_write_type)
          409: old_license = subprocess.check_output(licence_get_cmd)
          415: new_license = subprocess.check_output(licence_get_cmd)
          464: return subprocess.check_output(cmd, shell=True)
          467: return subprocess.check_output(cmd, shell=True)
          502: for key, value in OPENSTACK_RELEASE_VERS.iteritems():
          509: 'dpkg -l | grep plumgrid | awk \'{print $3}\' | '
          517: _exec_cmd_output('lsb_release -r | awk \'{print $2}\'',
          533: + ' | grep -i appversion | awk \'{print $2}\''
          597: os_info = subprocess.check_output(['ohai', '-l', 'fatal'])
          602: os_info_json = json.loads(os_info)
    File: ./charms/charm-plumgrid-director/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/plumgrid-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/plumgrid-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/pg_dir_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/plumgrid-relation-departed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/hooks/director-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-director/unit_tests/test_utils.py
           29: return yaml.safe_load(open(config).read())['options']
           39: for k, v in config.iteritems():
          107: def patch_open():
          108: '''Patch open() to allow mocking both open() itself and the file that is
          116: def stub_open(*args, **kwargs):
          117: mock_open(*args, **kwargs)
    File: ./charms/charm-plumgrid-director/unit_tests/test_pg_dir_utils.py
           21: class DummyContext():
           41: class _mock_OSConfigRenderer():
           66: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]

Package/directory: charm-plumgrid-edge
    File: ./charms/charm-plumgrid-edge/bin/charm_helpers_sync.py
            1: #!/usr/bin/python
           41: return yaml.load(open(conf_file).read())
           80: open(_i, 'wb').close()
          249: logging.error("Could not sync: %s" % e)
    File: ./charms/charm-plumgrid-edge/actions/sapi-post-zone-info
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-edge/actions/restart-pg
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-edge/actions/sapi-post-ips
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-edge/actions/actions.py
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-edge/actions/sapi-post-license
            1: #!/usr/bin/python
           56: return "Action %s undefined" % action_name
    File: ./charms/charm-plumgrid-edge/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/plumgrid-configs-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/install
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/pg_dir_utils.py
          110: with open(SOURCES_LIST, 'r+') as sources:
          136: status = subprocess.check_output(sigmund_status, shell=True)
          180: for cfg, rscs in resource_map().iteritems():
          199: return {cfg: rscs['services'] for cfg, rscs in resource_map().iteritems()}
          253: stdout=open(os.devnull, 'w'),
          287: with open(PG_IFCS_CONF, 'r') as ifcs:
          306: all_fabric_interfaces = json.loads(fabric_interfaces)
          366: fr = open(AUTH_KEY_PATH, 'r')
          375: fa = open(AUTH_KEY_PATH, file_write_type)
          409: old_license = subprocess.check_output(licence_get_cmd)
          415: new_license = subprocess.check_output(licence_get_cmd)
          464: return subprocess.check_output(cmd, shell=True)
          467: return subprocess.check_output(cmd, shell=True)
          502: for key, value in OPENSTACK_RELEASE_VERS.iteritems():
          509: 'dpkg -l | grep plumgrid | awk \'{print $3}\' | '
          517: _exec_cmd_output('lsb_release -r | awk \'{print $2}\'',
          533: + ' | grep -i appversion | awk \'{print $2}\''
          597: os_info = subprocess.check_output(['ohai', '-l', 'fatal'])
          602: os_info_json = json.loads(os_info)
    File: ./charms/charm-plumgrid-edge/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/plumgrid-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/plumgrid-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/pg_dir_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/plumgrid-relation-departed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/hooks/director-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-edge/unit_tests/test_utils.py
           29: return yaml.safe_load(open(config).read())['options']
           39: for k, v in config.iteritems():
          107: def patch_open():
          108: '''Patch open() to allow mocking both open() itself and the file that is
          116: def stub_open(*args, **kwargs):
          117: mock_open(*args, **kwargs)
    File: ./charms/charm-plumgrid-edge/unit_tests/test_pg_dir_utils.py
           21: class DummyContext():
           41: class _mock_OSConfigRenderer():
           66: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]

Package/directory: charm-plumgrid-gateway
    File: ./charms/charm-plumgrid-gateway/bin/charm_helpers_sync.py
            1: #!/usr/bin/python
           41: return yaml.load(open(conf_file).read())
           80: open(_i, 'wb').close()
          249: logging.error("Could not sync: %s" % e)
    File: ./charms/charm-plumgrid-gateway/hooks/pg_gw_utils.py
           87: with open(SOURCES_LIST, 'r+') as sources:
          114: status = subprocess.check_output(sigmund_status, shell=True)
          120: status = subprocess.check_output(sigmund_status, shell=True)
          159: for cfg, rscs in resource_map().iteritems():
          178: return {cfg: rscs['services'] for cfg, rscs in resource_map().iteritems()}
          242: stdout=open(os.devnull, 'w'),
          276: with open(PG_IFCS_CONF, 'r') as ifcs:
          295: all_fabric_interfaces = json.loads(fabric_interfaces)
          321: all_interfaces = json.loads(config('external-interfaces'))
          378: fr = open(AUTH_KEY_PATH, 'r')
          387: fa = open(AUTH_KEY_PATH, file_write_type)
          420: os_info = subprocess.check_output(['ohai', '-l', 'fatal'])
          425: os_info_json = json.loads(os_info)
    File: ./charms/charm-plumgrid-gateway/hooks/install
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/plumgrid-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/plumgrid-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/plumgrid-plugin-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/pg_gw_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-plumgrid-gateway/unit_tests/test_utils.py
           29: return yaml.safe_load(open(config).read())['options']
           39: for k, v in config.iteritems():
          107: def patch_open():
          108: '''Patch open() to allow mocking both open() itself and the file that is
          116: def stub_open(*args, **kwargs):
          117: mock_open(*args, **kwargs)
    File: ./charms/charm-plumgrid-gateway/unit_tests/test_pg_gw_utils.py
           21: class DummyContext():
           41: class _mock_OSConfigRenderer():
           64: [self.assertIn(q_conf, _map.keys()) for q_conf in confs]

Package/directory: charm-rabbitmq-server
    File: ./charms/charm-rabbitmq-server/tests/basic_deployment.py
          163: print("Running command: %s\n" % " ".join(command))
          164: output = subprocess.check_output(command)
          166: data = json.loads(output_json)
          174: output = subprocess.check_output(command)
          179: data = json.loads(output_json)
          532: while ret and tries < (max_wait / 30):
          555: while ret and tries < (max_wait / 30):
          647: nodes = json.loads(str_nodes)
    File: ./charms/charm-rabbitmq-server/templates/rabbitmq-env.conf
            6: {%- for key, value in settings.iteritems() %}
    File: ./charms/charm-rabbitmq-server/actions/resume
            1: #!/usr/bin/python
           55: clusterstat = check_output(['rabbitmqctl', 'cluster_status'],
    File: ./charms/charm-rabbitmq-server/actions/cluster-status
            1: #!/usr/bin/python
           55: clusterstat = check_output(['rabbitmqctl', 'cluster_status'],
    File: ./charms/charm-rabbitmq-server/actions/actions.py
            1: #!/usr/bin/python
           55: clusterstat = check_output(['rabbitmqctl', 'cluster_status'],
    File: ./charms/charm-rabbitmq-server/actions/pause
            1: #!/usr/bin/python
           55: clusterstat = check_output(['rabbitmqctl', 'cluster_status'],
    File: ./charms/charm-rabbitmq-server/scripts/collect_rabbitmq_stats.sh
           51: awk "{print \"$VHOST \" \$0 \" $(date +'%s') \"}" >> ${TMP_DATA_FILE} 2>${LOG_DIR}/list_queues.log
    File: ./charms/charm-rabbitmq-server/scripts/check_rabbitmq_queues.py
            1: #!/usr/bin/python
           14: with open(filename, "rb") as fin:
           25: print "ERROR: problem parsing the stats file"
           27: assert m_all.isdigit(), "Message count is not a number: %r" % m_all
           86: "%s in %s has %s messages" % (queue, vhost, message_no))
           89: "%s in %s has %s messages" % (queue, vhost, message_no))
           91: print "CRITICALS: %s" % ", ".join(criticals)
           95: print "WARNINGS: %s" % ", ".join(warnings)
           98: print "OK"
    File: ./charms/charm-rabbitmq-server/scripts/check_rabbitmq.py
            1: #!/usr/bin/python
           28: print "CRITICAL: amqplib not found"
           37: print "TIMEOUT waiting for all queued messages to be delivered"
           44: print "Connection to %s requested" % host_port
           50: print "ERROR: Could not connect to RabbitMQ server %s:%d" % (
           53: print e
           57: print "ERROR: Unknown error connecting to RabbitMQ server %s:%d" % (
           86: print "Created new exchange %s (%s)" % (
           90: print "Exchange %s (%s) is already declared" % (
          103: self.name = "%s_queue" % exname
          108: print self.name, "setup"
          124: consumer_tag = "callback_%s" % self.name
          130: print "Client %s saw this message: '%s'" % (self.name, msg.body)
          151: message = "This is test message %d" % counter
          155: print "Sent message: %s" % message
          167: for i in range(options.messages):
          179: sys.stdout = os.fdopen(os.dup(1), "w", 0)
          180: host_port = "%s:%s" % (host, port)
          185: print "Created %s exchange of type %s" % (exname, extype)
          188: print "Reusing existing exchange %s of type %s" % (exname, extype)
          228: print """
          230: """ % (options.host, options.port, options.exchange, options.type)
          234: print "Ok: sent and received %d test messages" % options.messages
          236: print "ERROR: Could not send/receive test messages"
    File: ./charms/charm-rabbitmq-server/hooks/start
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/ha-relation-joined
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/update-status
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/ceph-relation-changed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/ceph-relation-joined
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/leader-elected
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/rabbitmq_server_relations.py
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/leader-settings-changed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/cluster-relation-broken
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/ha-relation-changed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/install.real
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/rabbitmq_context.py
          100: with open(path, 'w') as fh:
          242: for line in open(ENV_CONF).readlines():
    File: ./charms/charm-rabbitmq-server/hooks/config-changed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/leader-deposed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/upgrade-charm
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/rabbit_utils.py
          156: for config_path, data in config.items():
          167: log("writing config file: %s , data: %s" % (config_path,
          176: for service in self.config_data.keys():
          192: output = subprocess.check_output([RABBITMQ_CTL, 'list_vhosts'])
          219: out = subprocess.check_output(cmd)
          301: log("Setting HA policy to vhost '%s'" % vhost, level='INFO')
          316: log("Clearing '%s' policy from vhost '%s'" % (name, vhost), level='INFO')
          371: out = subprocess.check_output(cmd, stderr=subprocess.STDOUT)
          401: log(subprocess.check_output(status_cmd), DEBUG)
          457: subprocess.check_output(cmd, stderr=subprocess.STDOUT)
          586: p = subprocess.Popen(cmd.split(" "),
          595: print l.strip('\n')
          609: log("command %s return non-zero." % cmd, level=ERROR)
          623: with open(_passwd_file, 'r') as passwd:
          640: with open(f, 'r') as passwd:
          675: with open(HOSTS_FILE, 'r') as hosts:
          678: log("Updating hosts file with: %s (current: %s)" % (map, lines),
          682: for ip, hostname in map.items():
          692: log("Removing line '%s' from hosts file" % (line))
          695: newlines.append("%s %s\n" % (ip, hostname))
          700: with open(tmpfile.name, 'w') as hosts:
          724: for f, ctxt in CONFIG_FILES.iteritems():
          736: for v in restart_map().values():
         1015: "(expected=%s, got=%s)" % (min_size, units), level=INFO)
    File: ./charms/charm-rabbitmq-server/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/hooks/stop
            1: #!/usr/bin/python
          227: singleset = set(['username', 'vhost'])
          258: for k, v in current.iteritems():
          295: ','.join(relation_settings.keys())), DEBUG)
          349: cookie = open(rabbit.COOKIE_PATH, 'r').read().strip()
          362: whitelist = [a for a in rdata.keys() if a not in blacklist]
          426: with open(rabbit.COOKIE_PATH, 'r') as f:
          434: with open(rabbit.COOKIE_PATH, 'wb') as out:
    File: ./charms/charm-rabbitmq-server/unit_tests/test_rabbit_utils.py
           78: '/this/is/a/config' in self.renderer.config_data.keys())
          122: with open(tmpfile.name, 'r') as fd:
          127: self.assertEqual(lines[0], "%s %s\n" % (map.items()[0]))
          135: with open(tmpfile.name, 'w') as fd:
          136: fd.write("%s %s\n" % (map.items()[0]))
          140: with open(tmpfile.name, 'r') as fd:
          145: self.assertEqual(lines[0], "%s %s\n" % (map.items()[0]))
          157: with open(tmpfile.name, 'w') as fd:
          159: fd.write("%s %s\n" % (altmap.items()[0]))
          163: with open(rabbit_utils.HOSTS_FILE, 'r') as fd:
          169: self.assertEqual(lines[1], "%s %s\n" % (map.items()[0]))
          170: self.assertEqual(lines[4], "%s %s\n" % (map.items()[3]))
          174: print "test_not_clustered"
    File: ./charms/charm-rabbitmq-server/unit_tests/test_utils.py
           46: return yaml.safe_load(open(config).read())['options']
           56: for k, v in config.iteritems():
          138: def patch_open():
          139: '''Patch open() to allow mocking both open() itself and the file that is
          147: def stub_open(*args, **kwargs):
          148: mock_open(*args, **kwargs)
    File: ./charms/charm-rabbitmq-server/unit_tests/test_rabbitmq_context.py
           68: m = mock.mock_open()
          180: with open(tmpfile.name, 'w') as fd:

Package/directory: charm-swift-proxy
    File: ./charms/charm-swift-proxy/tests/basic_deployment.py
          537: for section, pairs in expected.iteritems():
          593: for i in range(retry_count, -1, -1):
          607: u.log.info("sleeping %d seconds..." % i)
          660: for s, conf_file in services.iteritems():
    File: ./charms/charm-swift-proxy/templates/memcached.conf
           17: # Be even more verbose (print client commands as well)
    File: ./charms/charm-swift-proxy/actions/add_user.py
            1: #!/usr/bin/python
    File: ./charms/charm-swift-proxy/actions/add-user
            1: #!/usr/bin/python
    File: ./charms/charm-swift-proxy/actions/resume
            1: #!/usr/bin/python
           37: with open(actions_yaml_path) as fh:
           89: return "Action %s undefined" % action_name
    File: ./charms/charm-swift-proxy/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-swift-proxy/actions/actions.py
            1: #!/usr/bin/python
           37: with open(actions_yaml_path) as fh:
           89: return "Action %s undefined" % action_name
    File: ./charms/charm-swift-proxy/actions/pause
            1: #!/usr/bin/python
           37: with open(actions_yaml_path) as fh:
           89: return "Action %s undefined" % action_name
    File: ./charms/charm-swift-proxy/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-swift-proxy/lib/swift_utils.py
          281: rq['broker-timestamp'] = "%f" % time.time()
          370: log("Responses not all equal for key '%s'" % (key), level=DEBUG)
          416: for f, ctxt in CONFIG_FILES.iteritems():
          429: for v in restart_map().values():
          463: builder = pickle.load(open(path, 'rb'))
          470: builder.copy_from(pickle.load(open(path, 'rb')))
          480: with open(ring_path, "wb") as fd:
          557: if len(set([total for total in zone_distrib.itervalues()])) == 1:
          571: p = subprocess.Popen(cmd)
          575: msg = ("Failed to set min_part_hours=%s on %s" % (value, path))
          595: for ring in SWIFT_RINGS.itervalues():
          612: p = subprocess.Popen(cmd)
          705: builder = "%s.builder" % (server)
          748: for ring, builder_path in SWIFT_RINGS.iteritems():
          761: deleted = "%s.deleted" % (www_dir)
          771: for ring in SWIFT_RINGS.iterkeys():
          776: with open(path, 'rb') as fd:
          785: for builder in SWIFT_RINGS.itervalues():
          789: with open(builder, 'rb') as fd:
          886: if all([os.path.exists(p) for p in SWIFT_RINGS.itervalues()]):
          887: for ring, path in SWIFT_RINGS.iteritems():
          903: for ring in SWIFT_RINGS.itervalues():
          919: if not should_balance([r for r in SWIFT_RINGS.itervalues()]):
          926: for path in SWIFT_RINGS.itervalues():
          943: for ring, _ in SWIFT_RINGS.iteritems():
          946: os.rename(path, "%s.deleted" % (path))
          975: log("Notifying peer(s) that %s are ready for sync." % type, level=INFO)
          979: log("Notifying rid=%s (%s)" % (rid, rq), level=DEBUG)
         1072: for ring, builder in SWIFT_RINGS.iteritems():
         1082: log("Not yet synced: %s" % ', '.join(not_synced), level=INFO)
         1134: "(need >= %d)" % (num_zones, replicas), level=INFO)
         1158: rings = [r for r in SWIFT_RINGS.itervalues()]
    File: ./charms/charm-swift-proxy/lib/swift_context.py
          214: with open(SWIFT_HASH_FILE, 'r') as hashfile:
          218: with open(SWIFT_HASH_FILE, 'w') as hashfile:
          225: with open(SWIFT_HASH_FILE, 'w') as hashfile:
    File: ./charms/charm-swift-proxy/hooks/start
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/swift_hooks.py
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/ha-relation-joined
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/amqp-relation-joined
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/object-store-relation-joined
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/update-status
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/identity-service-relation-joined
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/cluster-relation-joined
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/amqp-relation-changed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/swift-storage-relation-changed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/cluster-relation-departed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/swift-storage-relation-broken
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/ha-relation-changed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/amqp-relation-departed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/identity-service-relation-changed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/install.real
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/config-changed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/upgrade-charm
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/cluster-relation-changed
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/stop
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/amqp-relation-broken
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/hooks/swift-storage-relation-joined
            1: #!/usr/bin/python
          152: for path in SWIFT_RINGS.itervalues():
          253: "(got=%s)" % (addr))
          273: log("Broadcasting acl '%s' to all storage units" % (rsync_hosts),
          313: if None in node_settings.itervalues():
          314: missing = [k for k, v in node_settings.iteritems() if v is None]
          316: "relation (missing=%s)" % (', '.join(missing)), level=INFO)
          330: node = {k: v for k, v in node_settings.items()}
          406: log("Cluster changed by unit=%s (local is leader)" % (remote_unit()),
          434: log("Unit '%s' has requested a resync" % (remote_unit()),
          458: "'%s'" % (key))
          463: log("Syncing rings and builders (peers-only=%s)" % (peers_only),
          471: "ready (current='%s', token='%s')" % (acks, tx_ack_token),
          487: "unable to attempt leader restore" % (remote_unit()))
          500: log("Cluster changed by unit=%s (local is non-leader)" % (remote_unit()),
          541: log("Broker and ACK tokens match (%s)" % (broker_token),
          644: "vip group - skipping" % (vip_key, vip), WARNING)
    File: ./charms/charm-swift-proxy/unit_tests/test_swift_context.py
          128: with open(tmpfile, 'r') as fd:
          150: with open(tmpfile, 'r') as fd:
    File: ./charms/charm-swift-proxy/unit_tests/test_templates.py
           65: with open(template.filename, 'r') as template_orig:
    File: ./charms/charm-swift-proxy/unit_tests/test_swift_utils.py
           29: for ring in swift_utils.SWIFT_RINGS.iterkeys():
           30: path = os.path.join(tmpdir, "%s.builder" % ring)
           32: with open(path, 'w') as fd:
          154: for path in swift_utils.SWIFT_RINGS.itervalues():
          160: node = {k: v for k, v in node_settings.items()}
          165: for path in swift_utils.SWIFT_RINGS.itervalues():
          190: for ring, builder in swift_utils.SWIFT_RINGS.iteritems():
          193: with open(ring, 'w') as fd:
          196: with open(builder, 'w') as fd:
          250: self.assertTrue(set(rq.keys()).issubset(template_keys))
          269: self.assertTrue(set(rq.keys()).issubset(template_keys))
          292: self.assertTrue(set(rq.keys()).issubset(template_keys))
          311: template_keys = set(rpc.template().keys())
          312: self.assertTrue(set(rq.keys()).issubset(template_keys))
    File: ./charms/charm-swift-proxy/unit_tests/swift-test
           11: PROXY_IP=`ec2metadata 2>/dev/null  | grep local-ipv4  | awk '{ print $2 }'`
           25: | grep http_code: | awk '{ print $2 }')
           35: | grep X-Auth-Token | awk '{ print $2 }')
           40: | grep X-Storage-Url | awk '{ print $2 }')
           50: | grep http_code: | awk '{ print $2 }')

Package/directory: charm-swift-storage
    File: ./charms/charm-swift-storage/tests/basic_deployment.py
          341: for section, pairs in expected.iteritems():
          371: for section, pairs in expected.iteritems():
          404: for section, pairs in expected.iteritems():
          478: for s, conf_file in services.iteritems():
    File: ./charms/charm-swift-storage/actions/resume
            1: #!/usr/bin/python
           53: with open(actions_yaml_path) as fh:
          104: return "Action %s undefined" % action_name
    File: ./charms/charm-swift-storage/actions/openstack_upgrade.py
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/actions/actions.py
            1: #!/usr/bin/python
           53: with open(actions_yaml_path) as fh:
          104: return "Action %s undefined" % action_name
    File: ./charms/charm-swift-storage/actions/pause
            1: #!/usr/bin/python
           53: with open(actions_yaml_path) as fh:
          104: return "Action %s undefined" % action_name
    File: ./charms/charm-swift-storage/actions/openstack-upgrade
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/lib/swift_storage_utils.py
          204: out = check_output(['findmnt', device])
          223: with open('/proc/partitions') as proc:
          293: return json.loads(devstore)
          308: log("Device '%s' does not appear to be in use by Swift" % (dev),
          318: blk_uuid = get_device_blkid("/dev/%s" % (dev))
          321: masterkey = "%s@%s" % (dev, env_uuid)
          326: "devstore)" % (dev), level=INFO)
          329: for key, val in devstore.iteritems():
          343: for k, v in devstore.iteritems()]
          347: "local devstore only)" % (dev), level=INFO)
          357: "will be added to the cache" % (dev), level=INFO)
          362: "devstore and proxy relation)" % (dev), level=INFO)
          376: blk_uuid = subprocess.check_output(['blkid', '-s', 'UUID', dev])
          403: blk_uuid = get_device_blkid("/dev/%s" % (dev))
          404: key = "%s@%s" % (dev, env_uuid)
          409: existing = [(k, v) for k, v in devstore.iteritems()
          448: log("Device '%s' already in the ring - ignoring" % (dev))
          542: with open(os.path.join(rsyncd_dir, filename), 'r') as fragment:
          544: with open('/etc/rsyncd.conf', 'w') as f:
          567: f = open('/etc/rsyncd.conf', 'w')
    File: ./charms/charm-swift-storage/lib/swift_storage_context.py
           46: with open('/etc/default/rsync') as _in:
           50: with open('/etc/default/rsync', 'a+') as out:
           53: with open('/etc/default/rsync', 'w') as out:
    File: ./charms/charm-swift-storage/files/nrpe-external-master/check_swift_storage.py
           21: with open(filename, 'rb') as f:
           37: data = urllib2.urlopen(url).read()
           38: ringmd5_info = json.loads(data)
           99: data = urllib2.urlopen(url).read()
          100: repl_info = json.loads(data)
    File: ./charms/charm-swift-storage/hooks/start
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/update-status
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/swift-storage-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/swift_storage_hooks.py
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/nrpe-external-master-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/install.real
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/config-changed
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/upgrade-charm
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/nrpe-external-master-relation-changed
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/stop
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/hooks/swift-storage-relation-joined
            1: #!/usr/bin/python
    File: ./charms/charm-swift-storage/unit_tests/test_check_swift_storage.py
           66: with patch("__builtin__.open", mock_open(read_data='data')) as \
    File: ./charms/charm-swift-storage/unit_tests/test_swift_storage_relations.py
           95: with patch_open() as (_open, _file):
          105: with patch_open() as (_open, _file):
          115: with patch_open() as (_open, _file):
          124: with patch_open() as (_open, _file):
          136: with patch_open() as (_open, _file):
          201: devices = {"vdb@%s" % (test_uuid):
          247: devices = {"vdb@%s" % (test_uuid): {"status": "active",
          249: "vdd@%s" % (test_uuid): {"status": "active",
          251: "vdc@%s" % (test_uuid): {"status": "active",
          292: devices = {"vdb@%s" % (test_uuid): {"status": "active",
          294: "vdd@%s" % (test_uuid): {"status": "active",
          296: "vdc@%s" % (test_uuid): {"status": "active",
    File: ./charms/charm-swift-storage/unit_tests/test_utils.py
           43: return yaml.safe_load(open(config).read())['options']
           53: for k, v in config.iteritems():
          121: def patch_open():
          122: '''Patch open() to allow mocking both open() itself and the file that is
          130: def stub_open(*args, **kwargs):
          131: mock_open(*args, **kwargs)
    File: ./charms/charm-swift-storage/unit_tests/test_swift_storage_utils.py
          310: with patch_open() as (_open, _file):
          322: with patch_open() as (_open, _file):
          451: def fake_check_output(*args, **kwargs):
    File: ./charms/charm-swift-storage/unit_tests/test_swift_storage_context.py
           74: with patch_open() as (_open, _file):

Package/directory: charm-tempest
    File: ./charms/charm-tempest/src/lib/charm/openstack/tempest.py
          445: f = open(logfile, "w")
          465: with open(logfile, 'r') as tempest_log:

Package/directory: charm-trove
    File: ./charms/charm-trove/src/tests/basic_deployment.py
          131: print("Running command: %s\n" % " ".join(command))
          132: output = subprocess.check_output(command)
          134: data = json.loads(output_json)
          142: output = subprocess.check_output(command)
          147: data = json.loads(output_json)
          324: for s, conf_file in services.iteritems():
    File: ./charms/charm-trove/src/templates/newton/trove-guestagent.conf
           57: # ========== Default Users / DBs Configuration ==========
    File: ./charms/charm-trove/src/templates/mitaka/trove-guestagent.conf
           57: # ========== Default Users / DBs Configuration ==========

Package/directory: charms.ceph
    File: ./charms/charms.ceph/setup.py
           52: os.system("git tag -a %s -m 'version %s'" % (version, version))
    File: ./charms/charms.ceph/ceph/crush_utils.py
           63: ids.sort()
           76: crush = check_output(['ceph', 'osd', 'getcrushmap'])
           77: return check_output(['crushtool', '-d', '-'], stdin=crush.stdout)
          102: compiled = check_output(['crushtool', '-c', '/dev/stdin', '-o',
          104: ceph_output = check_output(['ceph', 'osd', 'setcrushmap', '-i',
    File: ./charms/charms.ceph/ceph/utils.py
          192: with open(save_location, "w") as fd:
          193: for key, value in sysctl_dict.items():
          230: subprocess.check_output(["sysctl", "-p", sysctl_file])
          253: with open(speed_path, 'r') as sysfs:
          261: for name, speed in LinkSpeed.items():
          307: with open(max_sectors_kb_path, 'w') as f:
          326: with open(max_sectors_kb_path, 'r') as f:
          348: with open(max_hw_sectors_kb_path, 'r') as f:
          369: subprocess.check_output(['hdparm',
          384: block_info = subprocess.check_output(
          536: tree = subprocess.check_output(
          539: json_tree = json.loads(tree)
          564: tree = subprocess.check_output(
          568: json_tree = json.loads(tree)
          631: raise ValueError("dirname not in correct format: %s" % dirname)
          721: log("FATAL ERROR: %s" % msg,
          739: result = json.loads(subprocess.check_output(cmd))
          766: result = json.loads(subprocess.check_output(cmd))
          877: subprocess.check_output([
          888: subprocess.check_output(['stop', 'ceph-osd', 'id={}'.format(
          897: subprocess.check_output([
          904: subprocess.check_output([
          910: subprocess.check_output([
          958: info = subprocess.check_output(['sgdisk', '-i', partition.number,
         1042: res = subprocess.check_output(cmd)
         1188: for subsystem, subcaps in caps.items():
         1191: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1208: output = subprocess.check_output(
         1240: for subsystem, subcaps in caps.items():
         1250: return parse_key(subprocess.check_output(cmd).strip())  # IGNORE:E1103
         1261: for subsystem, subcaps in caps.items():
         1314: with open(done, 'w'):
         1316: with open(init_marker, 'w'):
         1348: with open(init_marker, 'w'):
         1364: out = subprocess.check_output(cmd).splitlines()
         1532: result = subprocess.check_output(cmd)
         1548: output = subprocess.check_output(["ceph", '--id', service, "fs", "ls"])
         2031: with open(ready_file, 'w') as f:
         2082: pools = subprocess.check_output(['rados', '--id', service, 'lspools'])
         2142: """Pretty print supported upgrade paths for ceph"""
         2144: for key, value in UPGRADE_PATHS.iteritems():
         2166: tree = subprocess.check_output(['ceph', 'pg', 'stat', '--format=json'])
         2168: json_tree = json.loads(tree)
         2190: tree = subprocess.check_output(
         2193: json_tree = json.loads(tree)
         2218: cmd_result = subprocess.check_output(
    File: ./charms/charms.ceph/ceph/broker.py
          104: return json.dumps(f(json.loads(req)))
          137: msg = ("Missing or invalid api version (%s)" % version)
          235: for permission, group in service["group_names"].items():
          240: for permission, groups in permission_types.items():
          269: service = json.loads(service_json)
          299: for _, groups in service['group_names'].items():
          318: group = json.loads(group_json)
          394: log("Creating pool '%s' (erasure_profile=%s)" % (pool.name,
          449: log("Creating pool '%s' (replicas=%s)" % (pool.name, replicas),
          453: log("Pool '%s' already exists - skipping create" % pool.name,
          522: msg = "Invalid key '%s'" % params['key']
          553: check_output(['radosgw-admin',
          575: check_output(
          604: with open(infile.name, 'w') as infile_handle:
          607: check_output(
          640: check_output(
          675: create_output = check_output(
          688: user_json = json.loads(create_output)
          732: check_output(["ceph",
          763: with open(infile.name, 'w') as infile_handle:
          766: check_output(
          793: log("Processing %s ceph broker requests" % (len(reqs)), level=INFO)
          796: log("Processing op='%s'" % op, level=DEBUG)
          851: msg = "Unknown operation '%s'" % op
    File: ./charms/charms.ceph/unit_tests/test_broker.py
          208: self.assertEqual(json.loads(rc), {'exit-code': 0})
          214: self.assertEqual(json.loads(rc), {
          222: self.assertEqual(json.loads(rc),
          230: self.assertEqual(json.loads(rc),
          251: self.assertEqual(json.loads(rc), {'exit-code': 0})
          274: self.assertEqual(json.loads(rc), {'exit-code': 0})
          291: self.assertEqual(json.loads(rc), {'exit-code': 0})
          311: self.assertEqual(json.loads(rc)['exit-code'], 0)
          312: self.assertEqual(json.loads(rc)['request-id'], '1ef5aede')
          345: self.assertEqual(json.loads(rc)['exit-code'], 0)
          346: self.assertEqual(json.loads(rc)['request-id'], '1ef5aede')
          370: self.assertEqual(json.loads(rc)['exit-code'], 0)
          371: self.assertEqual(json.loads(rc)['request-id'], '1ef5aede')
          382: self.assertEqual(json.loads(rc)['exit-code'], 1)
          383: self.assertEqual(json.loads(rc)['stderr'],
          385: self.assertEqual(json.loads(rc)['request-id'], '1ef5aede')
    File: ./charms/charms.ceph/unit_tests/test_utils.py
           29: class TestDevice():
          227: with open('unit_tests/partx_output', 'r') as partx_out:
          417: fake_open = mock_open()
          477: fake_open = mock_open()
    File: ./charms/charms.ceph/unit_tests/test_osd_upgrade_roll.py
          209: mo = mock_open()
